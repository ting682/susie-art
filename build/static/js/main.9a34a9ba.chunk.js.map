{"version":3,"sources":["firebaseConfig.js","contexts/authContext.js","components/login.js","components/privateRoute.js","components/forgotPassword.js","components/updateProfile.js","components/intro.js","components/pages/contact.js","components/productsIntro.js","components/introHeader.js","components/pages/home.js","components/editAbout.js","components/about.js","actions/fetchCart.js","components/artProduct.js","actions/postCart.js","components/editArt.js","components/editArtImages.js","components/addArt.js","components/artsContainer.js","components/art.js","components/artShow.js","components/editArtsContainer.js","components/blogInput.js","components/editBlog.js","components/blog.js","components/blogsContainer.js","components/dashboard.js","components/squarepay/hooks/useDynamicCallback.ts","components/squarepay/Context.tsx","components/squarepay/SquarePaymentForm.tsx","components/squarepay/ApplePayButton.tsx","components/squarepay/CreditCardCVVInput.tsx","components/squarepay/CreditCardExpirationDateInput.tsx","components/squarepay/CreditCardNumberInput.tsx","components/squarepay/CreditCardPostalCodeInput.tsx","components/squarepay/CreditCardSubmitButton.tsx","components/squarepay/GooglePayButton.tsx","components/squarepay/MasterpassButton.tsx","components/PaymentPage.jsx","components/squarePay.js","components/shoppingCart.js","actions/patchCart.js","App.js","reportWebVitals.js","reducers/artsReducer.js","reducers/artReducer.js","reducers/aboutReducer.js","reducers/blogsReducer.js","reducers/blogReducer.js","reducers/userReducer.js","reducers/cartReducer.js","reducers/reducers.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Login","setEmail","setPassword","error","setError","history","useHistory","handleSubmit","event","a","preventDefault","push","Fragment","Alert","variant","Form","onSubmit","Group","Label","Control","type","name","onChange","target","Button","className","to","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","varient","UpdateProfile","passwordConfirmation","setPasswordConfirmation","promises","Promise","all","then","catch","finally","required","placeholder","Intro","backgroundColor","setBackgroundColor","style","color","as","Link","onMouseEnter","onMouseOut","Contact","handleChange","setState","previousState","state","contactName","contactEmail","contactSubject","contactMessage","sendEmail","bind","e","emailjs","sendForm","result","console","log","text","this","paddingTop","controlId","rows","ProductsIntro","IntroHeader","paddingBottom","src","alt","width","maxWidth","href","Home","padding","EditAbout","dispatch","useDispatch","aboutText","useSelector","about","loaded","aboutTextChange","setAboutTextChange","show","setShow","aboutRef","database","ref","once","snap","aboutData","val","payload","getData","onClick","Modal","onHide","Header","closeButton","Title","Body","update","abouttext","modules","toolbar","About","Parser","fetchCart","userId","token","localStorage","getItem","fetch","credentials","method","headers","resp","json","data","lineItems","ArtProduct","arts","currentUserId","pathname","slug","images","map","image","index","url","effect","title","description","price","lineItem","qty","paypalPrice","imageUrl","body","JSON","stringify","uid","setItem","jwtToken","EditArt","setDescription","setPrice","EditArtImages","uploadStatus","setUploadStatus","uploadPercentage","setUploadPercentage","imageFile","files","options","maxSizeMB","maxWidthOrHeight","useWebWorker","imageCompression","compressedFile","fileRef","storage","child","put","on","snapshot","parseFloat","bytesTransferred","totalBytes","toFixed","FormFileInput","ProgressBar","animated","now","label","AddArt","artRoute","setArtRoute","setPaypalPrice","setTitle","artImageUrl","setArtImageUrl","artImageAlt","setArtImageAlt","artsLoaded","artIdRef","useRef","current","maxId","Object","entries","handleFileChange","getDownloadURL","set","id","parseInt","defaultValue","multiple","ArtsContainer","length","guestUserId","uuidv4","Breadcrumb","Item","active","sort","b","art","record","Art","imagesLoaded","artImages","position","ArtShow","match","params","artTitle","toLowerCase","dataOne","artImagesRef","listAll","list","items","itemRef","idx","array","split","artLoaded","EditArtsContainer","BlogInput","blogContent","setBlogContent","newUuid","newUpdatedAt","Date","toString","content","updatedAt","blogId","EditBlog","blogs","blogContentChange","setblogContentChange","TimeAgo","addDefaultLocale","en","timeAgo","Blog","Card","format","BlogsContainer","blog","Dashboard","useDynamicCallback","callback","useLayoutEffect","useCallback","Context","applePayState","formId","googlePayState","masterpassState","onCreateNonce","onVerifyBuyer","source","verificationDetails","SquarePaymentForm","apiWrapper","inputStyles","_mozOsxFontSmoothing","_webkitFontSmoothing","fontFamily","fontSize","lineHeight","placeholderColor","sandbox","setApplePayState","setGooglePayState","setMasterpassState","errorMessage","setErrorMessage","scriptLoaded","setScriptLoaded","undefined","paymentForm","setPaymentForm","formLoaded","setFormLoaded","cardNonceResponseReceivedCallback","errors","nonce","cardData","billingContact","shippingContact","shippingOption","createVerificationDetails","verifyBuyer","err","cardNonceResponseReceived","methodsSupported","methods","keys","includes","masterpass","applePay","googlePay","paymentFormLoaded","renderSqPaymentForm","newPaymentForm","SqPaymentForm","config","applicationId","autoBuild","callbacks","createPaymentRequest","inputEventReceived","shippingContactChanged","shippingOptionChanged","unsupportedBrowserDetected","locationId","document","getElementById","card","elementId","inputStyle","giftCard","placeholderGiftCard","inputClass","cardNumber","placeholderCreditCard","cvv","placeholderCVV","postalCode","placeholderPostal","expirationDate","placeholderExpiration","buildSqPaymentFormConfiguration","build","recalculateSize","setPostalCode","focusField","focus","onSuccess","onError","script","createElement","onload","onerror","appendChild","loadSqPaymentFormLibrary","destroy","srcBtn","masterpassImageUrl","display","backgroundImage","context","requestCardNonce","ApplePayButton","loadingView","unavailableView","CreditCardCVVInput","defaultProps","CreditCardExpirationDateInput","CreditCardNumberInput","CreditCardPostalCodeInput","CreditCardSubmitButton","GooglePayButton","MasterpassButton","LOCATION_ID","PaymentPage","shippingFirstNameRef","shippingLastNameRef","shippingAddress1Ref","shippingAddress2Ref","shippingCityRef","shippingStateRef","shippingZipRef","shippingPhoneRef","billingFirstNameRef","billingLastNameRef","billingAddress1Ref","billingAddress2Ref","billingCityRef","billingStateRef","billingZipRef","billingPhoneRef","emailRef","jwtCart","cart","sameShippingBilling","setSameShippingBilling","errorMessages","setErrorMessages","unavailableApple","unavailableGoogle","unavailableMasterpass","Table","bordered","hover","reduce","acc","item","Row","column","sm","Col","Check","checked","defaultChecked","buyerVerificationToken","idempotency_key","forEach","alert","location_id","amount","emailAddress","orderLocaleDate","toLocaleDateString","year","month","day","toLocaleTimeString","billing","firstName","lastName","address1","address2","city","zip","phone","shipping","response","ok","errorInfo","reject","requestShippingAddress","requestBillingInfo","currencyCode","countryCode","total","pending","intent","familyName","givenName","country","addressLines","SquarePay","that","sqPaymentScript","async","getElementsByTagName","ShoppingCart","handleRemoveItem","patchCart","borderless","responsive","colSpan","size","textAlign","verticalAlign","App","Navbar","bg","expand","Brand","icon","faFacebook","faTwitter","faInstagram","faShoppingCart","Toggle","aria-controls","Collapse","Nav","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","artsReducer","requesting","action","artReducer","requestingImages","aboutReducer","blogsReducer","blogReducer","userReducer","cartReducer","createBrowserHistory","store","createStore","combineReducers","router","connectRouter","compose","applyMiddleware","thunk","routerMiddleware","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.9a34a9ba.chunk.js","sourcesContent":["import firebase from 'firebase'\nimport 'firebase/auth'\n\nconst app = firebase.initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_PROJECT_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGE_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n  });\n\nexport const auth = app.auth()\n\nexport default app","import React, { useContext, useState, useEffect } from 'react'\nimport { auth } from '../firebaseConfig'\n\n\nconst AuthContext = React.createContext()\n\nexport function useAuth() {\n    return useContext(AuthContext)\n}\n\nexport function AuthProvider({ children }) {\n\n    const [currentUser, setCurrentUser] = useState()\n\n    const [loading, setLoading] = useState(true)\n\n    function signup(email, password) {\n        return auth.createUserWithEmailAndPassword(email, password)\n    }\n\n    function login(email, password) {\n        return auth.signInWithEmailAndPassword(email, password)\n    }\n\n    function logout() {\n        return auth.signOut()\n    }\n\n    function resetPassword(email) {\n        return auth.sendPasswordResetEmail(email)\n    }\n\n    function updateEmail(email) {\n        return currentUser.updateEmail(email)\n    }\n\n    function updatePassword(password) {\n        return currentUser.updatePassword(password)\n    }\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(user => {\n\n            setCurrentUser(user)\n            setLoading(false)\n            \n        })\n\n        return unsubscribe\n    }, [])\n\n    auth.onAuthStateChanged(user => {\n        setCurrentUser(user)\n    })\n\n    const value = {\n        currentUser,\n        signup,\n        login,\n        logout,\n        resetPassword,\n        updateEmail,\n        updatePassword\n    }\n\n    return (\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    )\n}","import React, { useState } from 'react'\nimport { Form, Alert, Button } from 'react-bootstrap'\nimport { useAuth } from '../contexts/authContext'\nimport { Link, useHistory } from 'react-router-dom'\n// import firebase from \"firebase/app\";\n\nexport default function Login () {\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    \n    const { login } = useAuth()\n    const [error, setError] = useState('')\n    const [loading, setLoading] = useState(false)\n    const history = useHistory()\n\n    // let provider = new firebase.auth.GoogleAuthProvider()\n\n    \n\n    const handleEmailChange = (event) => {\n        setEmail(event.target.value)\n    }\n\n    const handlePasswordChange = (event) => {\n        setPassword(event.target.value)\n    }\n\n\n    const handleSubmit = async (event) => {\n        event.preventDefault()\n        \n        try {\n            setError('')\n            setLoading(true)\n            await login(email, password)\n            history.push(\"/editproducts\")\n        } catch {\n            setError('Failed to sign in')\n        }\n        setLoading(false)\n    }\n\n    // const handleGoogleLogin = () => {\n    //     firebase.auth()\n    // .signInWithPopup(provider)\n    // .then((result) => {\n    //     /** @type {firebase.auth.OAuthCredential} */\n    //     var credential = result.credential;\n\n    //     // This gives you a Google Access Token. You can use it to access the Google API.\n    //     var token = credential.accessToken;\n    //     // The signed-in user info.\n    //     var user = result.user;\n    //     // ...\n    // }).catch((error) => {\n    //     // Handle Errors here.\n    //     var errorCode = error.code;\n    //     var errorMessage = error.message;\n    //     // The email of the user's account used.\n    //     var email = error.email;\n    //     // The firebase.auth.AuthCredential type that was used.\n    //     var credential = error.credential;\n    //     // ...\n    // });\n    // }\n\n    return (\n        <React.Fragment>\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            \n            <h1>{loading}</h1>\n            \n            <Form onSubmit={handleSubmit}>\n                <Form.Group>\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control type=\"email\" name=\"email\" onChange={handleEmailChange} value={email}></Form.Control>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" name=\"password\" onChange={handlePasswordChange} value={password}></Form.Control>\n                </Form.Group>\n                \n                <Button variant=\"outline-dark\" type=\"submit\">Login</Button>\n                <div className=\"w-100 text-center mt-3\">\n                    <Link to=\"/forgot-password\">Forgot password?</Link>\n                </div>\n                {/* <div className=\"w-100 text-center mt-2\">\n                    Need an account? <Link to=\"/signup\">Sign up</Link>\n                </div> */}\n            </Form>\n            {/* <Button onClick={handleGoogleLogin}>Login with Google</Button> */}\n        </React.Fragment>\n    )\n}","import React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\nimport { useAuth } from '../contexts/authContext'\n\nexport default function PrivateRoute({ component: Component, ...rest}) {\n\n    const { currentUser } = useAuth();\n    \n    return (\n        <Route\n            {...rest}\n            render={ props => {\n                return currentUser ? <Component {...props} /> : <Redirect to='/login'/>\n            }\n\n            }>\n        </Route>\n    )\n}","import { Form, Button, Alert } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport React, { useState } from 'react'\nimport { useAuth } from '../contexts/authContext'\n\nexport default function ForgotPassword() {\n\n    const [email, setEmail] = useState('')\n    \n    \n    const { resetPassword } = useAuth()\n    const [error, setError] = useState('')\n    const [loading, setLoading] = useState(false)\n    const [message, setMessage] = useState('')\n\n    const handleEmailChange = (event) => {\n        setEmail(event.target.value)\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault()\n        \n        try {\n            setMessage('')\n            setError('')\n            setLoading(true)\n            await resetPassword(email)\n            setMessage('Check your inbox for further instructions')\n        } catch {\n            setError('Failed to sign in')\n        }\n        setLoading(false)\n    }\n\n    \n\n    return (\n        <React.Fragment>\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            {message && <Alert varient=\"success\">{message}</Alert>}\n            <h1>Password Reset</h1>\n            <h1>{loading}</h1>\n            <h1>{message}</h1>\n            <Form onSubmit={handleSubmit}>\n                <Form.Group>\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control type=\"email\" name=\"email\" onChange={handleEmailChange} value={email}></Form.Control>\n                </Form.Group>\n                \n                \n                <Button type=\"submit\">Reset Password</Button>\n                <div className=\"w-100 text-center mt-3\">\n                    <Link to=\"/login\">Login</Link>\n                </div>\n            </Form>\n        </React.Fragment>\n    )\n}","import { useAuth } from '../contexts/authContext'\nimport React, { useState } from 'react'\nimport { Button, Form, Alert } from 'react-bootstrap'\n\nimport { Link, useHistory } from 'react-router-dom'\n\n\nfunction UpdateProfile()  {\n\n    const { currentUser, updateEmail, updatePassword } = useAuth()\n    const [email, setEmail] = useState(currentUser.email)\n    const [password, setPassword] = useState('')\n    const [passwordConfirmation, setPasswordConfirmation] = useState('')\n    \n    const [error, setError] = useState('')\n    const [loading, setLoading] = useState(false)\n    const history = useHistory()\n\n    const handleEmailChange = (event) => {\n        setEmail(event.target.value)\n    }\n\n    const handlePasswordChange = (event) => {\n        setPassword(event.target.value)\n    }\n\n    const handlePasswordConfirmation = (event) => {\n        setPasswordConfirmation(event.target.value)\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault()\n        if (password !== passwordConfirmation) {\n            return setError(\"Passwords do not match\")\n        }\n        \n        const promises = []\n\n        if (email !== currentUser.email) {\n            promises.push(updateEmail(email))\n        }\n\n        if (password) {\n            promises.push(updatePassword(password))\n        }\n\n        Promise.all(promises).then(() => {\n            history.push('/')\n        }).catch (() => {\n            setError('Failed to update account')\n        }).finally(() => {\n            setLoading(false)\n        })\n        // try {\n        //     setError('')\n        //     setLoading(true)\n        //     await signup(email, password)\n        //     history.push(\"/\")\n        // } catch {\n        //     setError('Failed to signup')\n        // }\n        // setLoading(false)\n    }\n\n    \n\n    return (\n        <React.Fragment>\n            <Alert variant=\"danger\">{error}</Alert>\n            <h1>{loading}</h1>\n            \n            <h1>{currentUser && currentUser.email}</h1>\n            <Form onSubmit={handleSubmit}>\n                <Form.Group>\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control type=\"email\" name=\"email\" value={email} onChange={handleEmailChange}></Form.Control>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" name=\"password\" onChange={handlePasswordChange} value={password} required placeholder=\"Leave blank to keep the same\"></Form.Control>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Password Confirmation</Form.Label>\n                    <Form.Control type=\"password\" name=\"passwordConfirmation\" onChange={handlePasswordConfirmation} value={passwordConfirmation} required placeholder=\"Leave blank to keep the same\"></Form.Control>\n                </Form.Group>\n                <Button type=\"submit\">Update profile</Button>\n                <div className=\"w-100 text-cetner mt-2\">\n                    <Link to=\"/\">Cancel</Link>\n                </div>\n            </Form>\n        </React.Fragment>\n    )\n        \n    \n}\n\nexport default UpdateProfile","import { useState } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nexport const Intro = (props) => {\n\n    const [backgroundColor, setBackgroundColor] = useState(\"white\")\n\n    const handleMouseEnter = () => {\n        setBackgroundColor('black')\n    }\n\n    const handleMouseOut = () => {\n        setBackgroundColor('white')\n    }\n\n    return (\n        <div className=\"introimage\">\n            <div className=\"introtext\" >\n                <h1 style={{color:\"white\"}} >Unleash Your Imagination</h1>\n                <p>Susie Wang Art for your art collection</p>\n                <Button as={Link} to=\"blog/\" variant=\"outline-dark\" style={{backgroundColor}} onMouseEnter={handleMouseEnter} onMouseOut={handleMouseOut}>Learn more</Button>\n            </div>\n        </div>\n    )\n}","import React, { Component } from 'react';\nimport emailjs from 'emailjs-com';\nimport { Form, Button } from 'react-bootstrap'\n\nclass Contact extends Component {\n\n   constructor(props) {\n      super(props)\n      this.state = {\n         contactName: '',\n         contactEmail: '',\n         contactSubject: '',\n         contactMessage: ''\n      }\n\n      this.sendEmail = this.sendEmail.bind(this)\n   }\n\n   sendEmail(e) {\n      e.preventDefault();\n  \n      emailjs.sendForm('service_gpm7vva', 'template_jlmg08s', e.target, 'user_IVYbb3zq4ybVNXdN0KuC7')\n        .then((result) => {\n            console.log(result.text);\n        }, (error) => {\n            console.log(error.text);\n        });\n\n      this.setState({\n         contactName: '',\n         contactEmail: '',\n         contactSubject: '',\n         contactMessage: ''\n      })\n    }\n\n    handleChange = (event) => {\n       this.setState(previousState => {\n          return {\n            ...previousState,\n            [event.target.name]: event.target.value\n          }\n       })\n    }\n\n  render() {\n\n\n    return (\n        <React.Fragment>\n            <h3 style={{paddingTop: \"30px\"}}>Get in touch.</h3>\n            <Form onSubmit={this.sendEmail}>\n                <Form.Group controlId=\"formGroupName\">\n                    \n                    <input className=\"nooutline\" name=\"contactName\" type=\"text\" onChange={this.handleChange} placeholder=\"Name\" value={this.state.contactName}/>\n                </Form.Group>\n                <Form.Group controlId=\"formGroupEmail\">\n                    \n                    <input className=\"nooutline\" name=\"contactEmail\" type=\"email\" onChange={this.handleChange} placeholder=\"Email address\" value={this.state.contactEmail}/>\n                </Form.Group>\n                <Form.Group controlId=\"formGroupSubject\">\n                    \n                    <input className=\"nooutline\" name=\"contactSubject\" type=\"text\" onChange={this.handleChange} placeholder=\"Subject\" value={this.state.contactSubject}/>\n                </Form.Group>\n                <Form.Group controlId=\"formGroupMessage\">\n                    \n                    <textarea className=\"nooutline\" name=\"contactMessage\" type=\"textarea\" rows=\"4\" onChange={this.handleChange} placeholder=\"Type your message here...\" value={this.state.contactMessage}/>\n                </Form.Group>\n                <Button variant=\"outline-dark\" type=\"submit\">Submit</Button>\n            </Form>\n        </React.Fragment>\n      \n    );\n  }\n}\n\nexport default Contact;\n","import React, { useState } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nexport const ProductsIntro = (props) => {\n\n    const [backgroundColor, setBackgroundColor] = useState(\"white\")\n\n    const handleMouseEnter = () => {\n        setBackgroundColor('black')\n    }\n\n    const handleMouseOut = () => {\n        setBackgroundColor('white')\n    }\n\n    return (\n        <React.Fragment>\n           <div className=\"introproducts\">\n            <div className=\"introproductstext\" >\n                    <h1 style={{color:\"white\"}} >See my extensive art collection</h1>\n                    <p>Learn more about Susie's art collection</p>\n                    <Button as={Link} to=\"/products\" variant=\"outline-dark\" style={{backgroundColor}} onMouseEnter={handleMouseEnter} onMouseOut={handleMouseOut}>Learn more</Button>\n                </div>\n            </div> \n        </React.Fragment>\n    )\n}","import React from 'react'\n\nexport const IntroHeader = (props) => {\n\n    return (\n        <React.Fragment>\n            <div className=\"introheader\" style={{paddingBottom: \"20px\"}}>\n                <img src=\"images/susie_wang_art_logo.png\" alt=\"Susie art logo\" style={{width: \"60%\", maxWidth: \"600px\"}}></img>\n                <h4>Enjoy the art journey!</h4>\n                <a href=\"mailto:info@susiewangart.com\" >info@susiewangart.com</a>\n                \n            </div>\n        </React.Fragment>\n    )\n}","import React from 'react'\nimport { Intro } from '../intro'\nimport Contact from '../pages/contact'\nimport { ProductsIntro } from '../productsIntro'\nimport { IntroHeader } from '../introHeader'\n\nexport const Home = (props) => {\n    return (\n        <React.Fragment>\n            <IntroHeader />\n            <Intro />\n\n            <h3 style={{padding: \"20% 0%\"}}>Our Extensive Collection</h3>\n\n            <ProductsIntro />\n            <Contact />\n        </React.Fragment>\n    )\n}","import firebase from \"firebase/app\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport React from 'react'\nimport { Button, Modal, Form } from 'react-bootstrap'\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css'\n\nexport const EditAbout = () => {\n\n    const dispatch = useDispatch()\n\n    const aboutText = useSelector(state => state.about.about)\n    \n    const loaded = useSelector(state => state.about.loaded)\n\n    const [aboutTextChange, setAboutTextChange] = useState(aboutText)\n\n    // debugger\n    const [show, setShow] = useState(false)\n\n    useEffect(() => {\n        let aboutRef = firebase.database().ref('about/abouttext')\n        // debugger\n        const getData = async () => {\n            await aboutRef.once('value', snap => {\n                // debugger\n                const aboutData = snap.val()\n                // debugger\n                setAboutTextChange(aboutData)\n                dispatch({type: \"GET_ABOUT\", payload: aboutData})\n            })\n        }\n        getData()\n    },[dispatch])\n    \n    const handleClick = () => {\n        setShow(true)\n    }\n\n    const handleClose = () => {\n        setShow(false)\n    }\n\n    const handleAboutTextChange = (value) => {\n        setAboutTextChange(value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        // debugger\n        firebase.database().ref('about/').update({\n            abouttext: aboutTextChange\n        }, error => {\n            if (error) {\n\n            } else {\n                \n                dispatch({type: 'UPDATE_ABOUT_TEXT', payload: {\n                    about: aboutTextChange\n                }})\n                setShow(false)\n            }\n        })\n    }\n\n    if (loaded) {\n        return (\n            <React.Fragment>\n                \n                <Button variant=\"outline-info\" onClick={handleClick} >Edit about</Button>\n                \n                <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Edit about text</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form onSubmit={handleSubmit}>\n                            {/* <Form.Label>Title</Form.Label>\n                            <Form.Control></Form.Control> */}\n                            \n                            <ReactQuill value={aboutTextChange} onChange={handleAboutTextChange} modules={{ toolbar: [\n                                    \n                                    [ 'bold', 'italic', 'underline'],\n                                    \n                                    \n                                    [{ 'header': '1' }, { 'header': '2' }, 'blockquote'],\n                                    [{ 'list': 'ordered' }, { 'list': 'bullet'}], \n                                    [ 'link', 'image', 'video']]}} />\n                            {/* <Form.Control onChange={handleAboutTextChange} value={aboutTextChange} type=\"text\"></Form.Control> */}\n                            <br></br>\n                            <Button type=\"submit\">Edit about text</Button>\n                        </Form>\n                    </Modal.Body>\n                </Modal>\n            </React.Fragment>\n        )\n    } else {\n        return (\n            <React.Fragment></React.Fragment>\n        )\n    }\n\n    \n}","import firebase from \"firebase/app\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport React from 'react'\nimport Parser from 'html-react-parser'\nimport { EditAbout } from './editAbout'\nimport { useAuth } from '../contexts/authContext'\n\nexport const About = () => {\n\n    const { currentUser } = useAuth()\n\n    const dispatch = useDispatch()\n\n    const aboutText = useSelector(state => state.about.about)\n\n    const loaded = useSelector(state => state.about.loaded)\n\n    useEffect(() => {\n        let aboutRef = firebase.database().ref('about/abouttext')\n        // debugger\n        const getData = async () => {\n            await aboutRef.once('value', snap => {\n                // debugger\n                const aboutData = snap.val()\n                dispatch({type: \"GET_ABOUT\", payload: aboutData})\n            })\n        }\n        getData()\n    },[dispatch])\n\n\n    if(loaded) {\n        return (\n            <React.Fragment>\n                <img src=\"https://firebasestorage.googleapis.com/v0/b/susie-wang-art.appspot.com/o/about%2Fabout.jpg?alt=media&token=70457c33-cc44-4ceb-abd9-90b616ac29cc\" alt=\"about Susie\" style={{width: \"100%\", maxWidth: \"600px\", paddingBottom: \"30px\"}}>\n                    \n                </img>\n                {Parser(aboutText)}\n                {!!currentUser && <EditAbout />}\n            </React.Fragment>\n        )\n    } else {\n        return (\n            <React.Fragment></React.Fragment>\n        )\n    }\n\n    \n}","export function fetchCart(userId) {\n    return (dispatch) => {\n        dispatch({type: 'START_GET_CART'})\n        // debugger\n        const token = localStorage.getItem('susieartJWT')\n        return fetch(`https://us-central1-susie-wang-art.cloudfunctions.net/carts`, {\n        // return fetch(`http://127.0.0.1:5002/susie-wang-art/us-central1/carts`, {\n            \n            credentials: \"include\",\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + token\n            }\n        })\n        // fetch(`http://localhost:3002/arts.json`)\n        .then(resp => resp.json())\n        .then(data => {\n            \n            // debugger\n            dispatch({type: 'GET_JWT_CART', payload: data.lineItems})\n            //console.log(data)\n            //debugger\n        })\n    }\n}","// import { Carousel, CarouselItem } from 'bootstrap'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n// import PaypalButton from './paypal/paypalButton'\nimport { Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n// import { useAuth } from '../contexts/authContext'\nimport { postCart } from '../actions/postCart'\n\nimport { fetchCart } from '../actions/fetchCart'\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\n\nexport const ArtProduct = (props) => {\n\n    const loaded = useSelector(state => state.arts.loaded)\n\n    // const { currentUser } = useAuth()\n\n    const dispatch = useDispatch()\n\n    // if (currentUser) {\n    //     dispatch({type: 'SET_USER', payload: {uid: currentUser.uid}})\n    // } else {\n    //     // const guestUserId = uuidv4()\n    //     // dispatch({type: 'SET_USER', payload: {uid: guestUserId}})\n    // }\n\n    const currentUserId = useSelector(state => state.user.user)\n    \n    // debugger\n\n    // const [showPaypal, setShowPaypal] = useState(false)\n\n    const mapImages = () => {\n        // debugger\n        return [props.images[0]].map(function(image, index) {\n            //debugger\n\n            return <LazyLoadImage key={index}\n                        className=\"w-100\" style={{maxWidth: \"600px\"}}\n                        // src={\"http://localhost:3002/\" + image.url}\n                        src={image.url}\n                        alt={image.alt}\n                        effect=\"blur\"\n                    />\n\n            // return <CarouselItem key={index}>\n            //         <img key={index}\n            //             className=\"d-blog w-100\"\n            //             src={image.url}\n            //             alt={image.alt}\n            //         />\n\n            //     </CarouselItem>\n            \n        })\n    }\n\n    // const handlePay = () => {\n    //     setShowPaypal(true)\n    // }\n\n    // if (showPaypal) {\n    //     //debugger\n    //     return <PaypalButton image={props.images[0].url} imageAlt={props.images[0].alt} product={props.title} paypalPrice={props.paypalPrice}/>\n    // }\n\n    const addToCart = () => {\n        \n        // dispatch({type: 'ADD_ITEM_TO_CART', payload: {title: props.title, description: props.description, qty: 1, price: props.paypalPrice, imageUrl: props.images[0]}})\n        dispatch(postCart(currentUserId, {title: props.title, description: props.description, qty: 1, price: props.paypalPrice, imageUrl: props.images[0]}))\n        dispatch(fetchCart(currentUserId))\n    }\n\n    if (loaded) {\n       // debugger\n        return (\n            <React.Fragment>\n                \n                {/* <Carousel> */}\n            \n                    \n                {/* </Carousel> */}\n                <Link to={{\n                    pathname: `/products/${props.slug}`\n                }} >\n                {mapImages()}\n                \n                    <h2>{props.title}</h2>\n                </Link>\n                <p>{props.description}</p>\n                <p>{props.price}</p>\n                \n                <Button onClick={addToCart}>Add to cart</Button>\n                <br></br>\n                {/* <Button onClick={handlePay}>Pay via Paypal</Button> */}\n            </React.Fragment>\n        )\n    } else {\n        return (\n            <React.Fragment>\n\n            </React.Fragment>\n        )\n    }\n    \n}","export function postCart(userId, lineItem) {\n    return (dispatch) => {\n        dispatch({type: 'START_POST_CART'})\n        // debugger\n        return fetch(`https://us-central1-susie-wang-art.cloudfunctions.net/carts`, {\n        // return fetch(`http://127.0.0.1:5002/susie-wang-art/us-central1/carts`, {\n            \n            credentials: \"include\",\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                uid: userId,\n                lineItem: lineItem\n            })\n        })\n        // fetch(`http://localhost:3002/arts.json`)\n        .then(resp => resp.json())\n        .then(data => {\n            // debugger\n            // debugger\n            localStorage.setItem('susieartJWT', data.jwtToken)\n            // dispatch({type: 'GET_JWT_CART', payload: data.jwtToken})\n            //console.log(data)\n            //debugger\n        })\n    }\n}","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport firebase from \"firebase/app\";\nimport { Modal, Button, Form } from 'react-bootstrap'\n\nexport const EditArt = (props) => {\n\n    const dispatch = useDispatch()\n    const [show, setShow] = useState(false)\n    const [description, setDescription] = useState(props.description)\n    const [price, setPrice] = useState(props.price)\n\n    const handleClick = () => {\n        setShow(true)\n    }\n\n    const handleClose = () => {\n        setShow(false)\n    }\n\n    const handleDescriptionChange = (event) => {\n        setDescription(event.target.value)\n    }\n\n    const handlePriceChange = (event) => {\n        setPrice(event.target.value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        // debugger\n        firebase.database().ref('arts/' + props.slug).update({\n            description: description,\n            price: price\n        }, error => {\n            if (error) {\n\n            } else {\n                \n                dispatch({type: 'UPDATE_ART', payload: {\n                    slug: props.slug,\n                    description: description,\n                    price: price\n                }})\n                setShow(false)\n            }\n        })\n    }\n\n    return (\n        <div style={{paddingBottom: \"30px\"}}>\n            \n            <Button variant=\"outline-info\" onClick={handleClick} >Edit art</Button>\n            \n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit {props.title}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={handleSubmit}>\n                        {/* <Form.Label>Title</Form.Label>\n                        <Form.Control></Form.Control> */}\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control onChange={handleDescriptionChange} value={description} type=\"text\"></Form.Control>\n                        <Form.Label>Price</Form.Label>\n                        <Form.Control onChange={handlePriceChange} value={price} type=\"text\"></Form.Control>\n                        <br></br>\n                        <Button type=\"submit\">Edit art</Button>\n                    </Form>\n                </Modal.Body>\n            </Modal>\n        </div>\n    )\n}","import React, { useState } from 'react'\n// import { useDispatch } from 'react-redux'\nimport firebase from \"firebase/app\";\nimport { Modal, Button, Form, ProgressBar } from 'react-bootstrap'\nimport FormFileInput from 'react-bootstrap/esm/FormFileInput';\nimport imageCompression from 'browser-image-compression';\n\n\nexport const EditArtImages = (props) => {\n\n    // const dispatch = useDispatch()\n    const [show, setShow] = useState(false)\n    // let fileList = []\n    const [uploadStatus, setUploadStatus] = useState('info')\n    const [uploadPercentage, setUploadPercentage] = useState(0)\n\n    const handleClick = () => {\n        setShow(true)\n    }\n\n    const handleClose = () => {\n        setShow(false)\n    }\n\n    const handleChange = async (event) => {\n        const imageFile = event.target.files[0]\n        // debugger\n        const options = {\n            maxSizeMB: 1,\n            maxWidthOrHeight: 1920,\n            useWebWorker: true\n          }\n\n        const compressedFile = await imageCompression(imageFile, options);\n\n        const fileRef = firebase.storage().ref('images/' + props.slug).child(imageFile.name)\n        \n        let uploadTask = fileRef.put(compressedFile)\n\n        uploadTask.on('state_changed', (snapshot) => {\n            setUploadPercentage(parseFloat(((snapshot.bytesTransferred / snapshot.totalBytes) * 100).toFixed(2)))\n\n\n        }, (error) => {\n            console.log(error)\n        },\n        () => {\n            setUploadStatus('success')\n            setShow(false)\n\n        })\n        \n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        debugger\n        \n    }\n\n    return (\n        <div style={{paddingBottom: \"30px\"}}>\n            \n            <Button variant=\"outline-info\" onClick={handleClick} >Add art image</Button>\n            \n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add image to {props.title}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={handleSubmit}>\n                        {/* <Form.Label>Title</Form.Label>\n                        <Form.Control></Form.Control> */}\n                        \n                        <FormFileInput onChange={handleChange}></FormFileInput>\n                        {/* <Button type=\"submit\">Upload art images</Button> */}\n                    </Form>\n                    <ProgressBar variant={uploadStatus} animated now={uploadPercentage} label={`${uploadPercentage}%`} />\n                </Modal.Body>\n            </Modal>\n        </div>\n    )\n}","import React, { useState, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport firebase from \"firebase/app\";\nimport { Modal, Button, Form, ProgressBar } from 'react-bootstrap'\nimport FormFileInput from 'react-bootstrap/esm/FormFileInput';\nimport imageCompression from 'browser-image-compression';\n\nexport const AddArt = (props) => {\n\n    \n    const [show, setShow] = useState(false)\n    const [description, setDescription] = useState('')\n    const [price, setPrice] = useState('')\n    const [artRoute, setArtRoute] = useState('')\n    const [paypalPrice, setPaypalPrice] = useState('')\n    const [title, setTitle] = useState('')\n    \n    const [artImageUrl, setArtImageUrl] = useState('')\n    const [artImageAlt, setArtImageAlt] = useState('')\n    const [uploadStatus, setUploadStatus] = useState('info')\n    const [uploadPercentage, setUploadPercentage] = useState(0)\n    const dispatch = useDispatch()\n    const arts = useSelector(state => state.arts.arts)\n    const artsLoaded = useSelector(state => state.arts.loaded)\n    const artIdRef = useRef()\n    artIdRef.current = 0\n    let maxId = 0;\n    if (artsLoaded) {\n        for(const [key, value] of Object.entries(arts)) {\n            // debugger\n            if (value[\"id\"] > maxId) {\n                maxId = value[\"id\"]\n                artIdRef.current = maxId + 1\n            }\n        }\n    }\n    // debugger\n    \n\n\n\n    const handleClick = () => {\n        setShow(true)\n    }\n\n    const handleClose = () => {\n        setShow(false)\n    }\n\n    const handleDescriptionChange = (event) => {\n        setDescription(event.target.value)\n    }\n\n    const handlePriceChange = (event) => {\n        setPrice(event.target.value)\n    }\n\n    const handleArtRoute = (event) => {\n        setArtRoute(event.target.value)\n    }\n\n    const handlePaypalPrice = (event) => {\n        setPaypalPrice(event.target.value)\n    }\n\n    const handleTitleChange = (event) => {\n        setTitle(event.target.value)\n    }\n\n    // const handleArtId = (event) => {\n    //     setArtId(event.target.value)\n    // }\n\n    const handleFileChange = async (event) => {\n        event.preventDefault()\n        const imageFile = event.target.files[0]\n        // debugger\n        const fileRef = firebase.storage().ref('images/' + artRoute).child(imageFile.name)\n\n        const options = {\n            maxSizeMB: 1,\n            maxWidthOrHeight: 1920,\n            useWebWorker: true\n          }\n\n        const compressedFile = await imageCompression(imageFile, options);\n\n        let uploadTask = fileRef.put(compressedFile)\n\n        uploadTask.on('state_changed', (snapshot) => {\n            setUploadPercentage(parseFloat(((snapshot.bytesTransferred / snapshot.totalBytes) * 100).toFixed(2)))\n\n\n        }, (error) => {\n            console.log(error)\n        },\n        () => {\n            setUploadStatus('success')\n            \n\n        })\n\n        await fileRef.getDownloadURL().then(function(url) {\n            setArtImageAlt(imageFile.name)\n            setArtImageUrl(url)\n        })\n        console.log(artImageUrl)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        // debugger\n        firebase.database().ref('arts/' + artRoute).set({\n            description: description,\n            price: price,\n            paypalPrice: paypalPrice,\n            slug: artRoute,\n            title: title,\n            id: parseInt(artIdRef.current),\n            images: [{url: artImageUrl, alt: artImageAlt}]\n\n        }, error => {\n            if (error) {\n\n            } else {\n                \n                let artsRef = firebase.database().ref('arts/')\n            \n                artsRef.once('value', (snapshot) => {\n                \n                    const data = snapshot.val()\n                    \n                    dispatch({type: 'GET_ARTS', payload: data})\n                })\n\n                setShow(false)\n            }\n        })\n    }\n\n    return (\n        <div style={{paddingBottom: \"30px\"}}>\n            \n            <Button variant=\"outline-info\" onClick={handleClick} >Add art</Button>\n            \n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add art</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={handleSubmit}>\n                        <Form.Label>Title</Form.Label>\n                        <Form.Control onChange={handleTitleChange} value={title} type=\"text\"></Form.Control>\n                        <Form.Label>Art route (no spaces)</Form.Label>\n                        <Form.Control onChange={handleArtRoute} value={artRoute} type=\"text\"></Form.Control>\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control onChange={handleDescriptionChange} value={description} type=\"text\"></Form.Control>\n                        <Form.Label>Price</Form.Label>\n                        <Form.Control onChange={handlePriceChange} value={price} type=\"text\"></Form.Control>\n                        <Form.Label>Paypal Price</Form.Label>\n                        <Form.Control onChange={handlePaypalPrice} value={paypalPrice} type=\"text\"></Form.Control>\n                        <Form.Label>Art ID</Form.Label>\n                        <Form.Control ref={artIdRef} type=\"text\" defaultValue={maxId + 1}></Form.Control>\n                        <FormFileInput onChange={handleFileChange} multiple></FormFileInput>\n                        <br></br>\n                        <Button type=\"submit\">Add art</Button>\n                    </Form>\n                    <ProgressBar variant={uploadStatus} animated now={uploadPercentage} label={`${uploadPercentage}%`} />\n                </Modal.Body>\n            </Modal>\n        </div>\n    )\n}","import { useEffect } from \"react\"\nimport { useDispatch, useSelector } from 'react-redux'\n// import { fetchArts } from '../actions/fetchArts'\nimport React from 'react'\nimport { ArtProduct } from './artProduct'\nimport { Breadcrumb } from 'react-bootstrap'\nimport firebase from \"firebase/app\";\nimport { Link } from 'react-router-dom'\nimport { EditArt } from './editArt'\nimport { EditArtImages } from \"./editArtImages\"\nimport { useAuth } from '../contexts/authContext'\nimport { v4 as uuidv4 } from 'uuid'\nimport { fetchCart } from '../actions/fetchCart'\nimport { AddArt } from './addArt'\n\nexport const ArtsContainer = (props) => {\n\n    // const [artsData, setArtsData] = useState([])\n    // const [fetched, setFetched] = useState(false)\n\n    const dispatch = useDispatch()\n    const arts = useSelector(state => state.arts.arts)\n    // const requesting = useSelector(state => state.arts.requesting)\n    // debugger\n    // const [limit, setLimit] = useState(2)\n    \n    const { currentUser } = useAuth()\n    \n    const currentUserId = useSelector(state => state.user.user)\n    \n    if (currentUserId.length === 0) {\n        \n        if (localStorage.getItem('susieartuid') === null) {\n            const guestUserId = uuidv4()\n            localStorage.setItem('susieartuid', guestUserId)\n            dispatch({type: 'SET_USER', payload: {uid: guestUserId}})\n        } else {\n            dispatch({type: 'SET_USER', payload: {uid: localStorage.getItem('susieartuid')}})\n            dispatch(fetchCart(localStorage.getItem('susieartuid')))\n        }\n        \n\n        \n    } else {\n        \n    }\n    \n\n    useEffect(() => {\n        function getData() {\n            \n        \n            let artsRef = firebase.database().ref('arts/')\n            // debugger\n            return artsRef.once('value', (snapshot) => {\n                // debugger\n                const data = snapshot.val()\n                // console.log(data)\n                dispatch({type: 'GET_ARTS', payload: data})\n            })\n            \n        }\n        getData()\n        \n    },[dispatch])\n\n    // const mapArts = () => {\n    //     debugger\n    //     arts.map(function (art, index) {\n            \n    //         return <Art key={index} title={art.title} description={art.description} price={art.price} images={art.images} />\n    //     })\n    // }\n    \n        return (\n            <React.Fragment>\n                <Breadcrumb>\n                        <Breadcrumb.Item ><Link to=\"/\">Home</Link></Breadcrumb.Item>\n                        \n                        <Breadcrumb.Item active>Products</Breadcrumb.Item>\n                </Breadcrumb>\n\n                {!!currentUser && <AddArt />}\n                {Object.entries(arts).sort((a, b) => {\n                    //debugger\n                    return a[1].id - b[1].id\n                }).map((art) => {\n                    \n                    // debugger\n                \n                return (\n                    <React.Fragment>\n                        <ArtProduct key={art[1].id} record={art[1].id} title={art[1].title} description={art[1].description} price={art[1].price} images={art[1].images} paypalPrice={art[1].paypalPrice} slug={art[1].slug} />\n                        {!!currentUser && <EditArt  key={art[1].id * 10} record={art[1].id} title={art[1].title} description={art[1].description} price={art[1].price} images={art[1].images} paypalPrice={art[1].paypalPrice} slug={art[1].slug} />}\n                        {!!currentUser && <EditArtImages key={art[1].id * 100} record={art[1].id} title={art[1].title} description={art[1].description} price={art[1].price} images={art[1].images} paypalPrice={art[1].paypalPrice} slug={art[1].slug} />}\n                    </React.Fragment>\n                )\n            })}\n            \n    \n            </React.Fragment>\n        )\n    \n    \n}","// import { Carousel, CarouselItem } from 'bootstrap'\nimport React, { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n// import PaypalButton from './paypal/paypalButton'\n// import { Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { Breadcrumb } from 'react-bootstrap'\n// import firebase from \"firebase/app\";\n\nimport { Carousel } from 'react-responsive-carousel'\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\n\nexport const Art = (props) => {\n\n    //debugger\n    const loaded = useSelector(state => state.art.imagesLoaded)\n    const artImages = useSelector(state => state.art.images)\n    // const [load, setLoad] = useState(true)\n    // const [showPaypal, setShowPaypal] = useState(false)\n    // const dispatch = useDispatch()\n\n    const mapImages = () => {\n        // debugger\n        \n            return artImages.map(function(image, index) {\n                //debugger\n                \n                return (\n                    <div key={index} style={{position: \"relative\"}}>\n                        <LazyLoadImage key={index}\n                            className=\"w-100\" style={{maxWidth: \"600px\"}}\n                            // src={\"http://localhost:3002/\" + image.url}\n                            src={image.url}\n                            alt={image.alt}\n                            effect=\"blur\"\n                        />\n                        \n                    </div>\n                \n                )\n            })\n        \n            \n        \n        // return props.images.map(function(image, index) {\n        //     //debugger\n\n        //     return <img key={index}\n        //                 className=\"w-100\" style={{maxWidth: \"600px\"}}\n        //                 // src={\"http://localhost:3002/\" + image.url}\n        //                 src={\"https://susie-wang-art.web.app/\" + image.url}\n        //                 alt={image.alt}\n        //             />\n\n            // return <CarouselItem key={index}>\n            //         <img key={index}\n            //             className=\"d-blog w-100\"\n            //             src={image.url}\n            //             alt={image.alt}\n            //         />\n\n            //     </CarouselItem>\n            \n        \n    }\n\n    // const handlePay = () => {\n    //     setShowPaypal(true)\n    // }\n\n    // if (showPaypal) {\n    //     //debugger\n    //     return <PaypalButton image={props.images[0].url} imageAlt={props.images[0].alt} product={props.title} paypalPrice={props.paypalPrice}/>\n    // }\n    // debugger\n    \n    \n    // let artDatabaseRef = firebase.database().ref('arts/' + props.artRoute)\n\n    // artImagesRef.child('fairytale.jpg').getDownloadURL().then(url => {\n    //     console.log(url)\n    // })\n    \n    // let allPromises = []\n\n\n\n    useEffect(() => {\n        // debugger\n        \n        \n        \n            \n            \n  \n            \n            // const list = await artImagesRef.listAll().then(res => {\n            //     res.items.forEach(function(itemRef, idx, array) {\n            //         // artImagesRef.getDownloadURL()\n                    \n            //         artImagesRef.child(itemRef.name).getDownloadURL().then(url => {\n            //             // console.log(url)\n    \n            //             dispatch({type: \"GET_IMAGE\", payload: {url: url, alt: itemRef.name.split('.')[0]}})\n                        \n            //         })\n            //     })\n                \n            //     //debugger\n                \n                  \n            // })\n        \n        \n        \n    },[])\n    \n\n    // debugger\n    if(loaded) {\n        return (\n            <React.Fragment>\n                {/* <Carousel> */}\n            \n                    \n                {/* </Carousel> */}\n                <Breadcrumb>\n                    <Breadcrumb.Item ><Link to=\"/\">Home</Link></Breadcrumb.Item>\n                    <Breadcrumb.Item>\n                        <Link to=\"/products\">Products</Link>\n                    </Breadcrumb.Item>\n                    <Breadcrumb.Item active>{props.title}</Breadcrumb.Item>\n                </Breadcrumb>\n                <Carousel>\n                    {mapImages()}\n                </Carousel>\n                \n                \n                <h2>{props.title}</h2>\n                \n                <p>{props.description}</p>\n                <p>{props.price}</p>\n\n                {/* <Button onClick={handlePay}>Pay via Paypal</Button> */}\n            </React.Fragment>\n        )\n    } else {\n        return (\n            <React.Fragment></React.Fragment>\n        )\n    }\n       \n        \n    \n    \n}","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n// import { fetchArt } from '../actions/fetchArt'\n// import { fetchArts } from '../actions/fetchArts'\nimport { Art } from './art'\nimport firebase from \"firebase/app\";\n\n// let artsRef = firebase.database().ref('arts/')\n\nexport const ArtShow = (props) => {\n\n    \n    //    props.match.params.artTitle\n    const dispatch = useDispatch()\n\n    // const [fetched, setFetched] = useState(false)\n\n    const artRoute = props.match.params.artTitle.toLowerCase()\n    // debugger\n    // const arts = useSelector(state => state.arts)\n    // debugger\n    const art = useSelector(state => state.art)\n    \n    \n    // debugger\n    \n\n    useEffect(() => {\n        async function getData() {\n\n        \n            // debugger\n            // let artRef = firebase.database().ref('arts/').orderByChild('paypalPrice').equalTo('100').limitToFirst(3)\n            let artRef = firebase.database().ref('arts/' + artRoute)\n            artRef.once('value', snap => {\n                //debugger\n                const dataOne = snap.val()\n                // debugger\n                dispatch({type: 'GET_ART', payload: dataOne})\n                // setFetched(true)\n            })\n            let artImagesRef = firebase.storage().ref('images/' + artRoute)\n    \n            dispatch({type: \"START_REQUESTING_IMAGES\"})\n            const list = await artImagesRef.listAll()\n            //  debugger\n                Promise.all(\n                    \n                    list.items.map(async function(itemRef, idx, array) {\n                        // artImagesRef.getDownloadURL()\n                        \n                        const url = await artImagesRef.child(itemRef.name).getDownloadURL()\n                        dispatch({type: \"GET_IMAGE\", payload: {url: url, alt: itemRef.name.split('.')[0]}})\n                        \n                        \n                    })\n                ).then(resp => {\n                    dispatch({type: \"FINISHED_LOADING_IMAGES\"})\n                    \n                })\n    \n        }\n        getData()\n    }, [artRoute, dispatch])\n\n    if (art.artLoaded) {\n        // debugger\n        return (\n            <React.Fragment>\n                <Art title={art.art.title} description={art.art.description} price={art.art.price} images={art.art.images} paypalPrice={art.art.paypalPrice} artRoute={artRoute}/>\n            </React.Fragment>\n        )\n    } else {\n        return (\n            <React.Fragment>\n\n            </React.Fragment>\n        )\n    }\n\n    \n}","import { useEffect } from \"react\"\nimport { useDispatch, useSelector } from 'react-redux'\n// import { fetchArts } from '../actions/fetchArts'\nimport React from 'react'\nimport { ArtProduct } from './artProduct'\nimport { Breadcrumb, Button } from 'react-bootstrap'\nimport firebase from \"firebase/app\";\nimport { Link } from 'react-router-dom'\nimport { EditArt } from './editArt'\nimport { EditArtImages } from \"./editArtImages\"\n\nexport const EditArtsContainer = (props) => {\n\n    const dispatch = useDispatch()\n    const arts = useSelector(state => state.arts.arts)\n    // const requesting = useSelector(state => state.arts.requesting)\n    // debugger\n    // const [limit, setLimit] = useState(2)\n    \n\n    \n\n    useEffect(() => {\n        function getData() {\n            \n        \n            let artsRef = firebase.database().ref('arts/')\n            // debugger\n            return artsRef.once('value', (snapshot) => {\n                // debugger\n                const data = snapshot.val()\n                // console.log(data)\n                dispatch({type: 'GET_ARTS', payload: data})\n            })\n            \n        }\n        getData()\n    },[dispatch])\n\n    // const mapArts = () => {\n    //     debugger\n    //     arts.map(function (art, index) {\n            \n    //         return <Art key={index} title={art.title} description={art.description} price={art.price} images={art.images} />\n    //     })\n    // }\n    \n        return (\n            <React.Fragment>\n                <Breadcrumb>\n                        <Breadcrumb.Item ><Link to=\"/\">Home</Link></Breadcrumb.Item>\n                        \n                        <Breadcrumb.Item active>Products</Breadcrumb.Item>\n                </Breadcrumb>\n                <h1><Button as={Link} to='/editabout' variant=\"outline-dark\">Edit about</Button></h1>\n                {Object.entries(arts).sort((a, b) => {\n                    //debugger\n                    return a[1].id - b[1].id\n                }).map((art) => {\n                    \n                    // debugger\n                \n                return (\n                    <React.Fragment>\n                        \n                        <ArtProduct key={art[1].id} record={art[1].id} title={art[1].title} description={art[1].description} price={art[1].price} images={art[1].images} paypalPrice={art[1].paypalPrice} slug={art[1].slug} />\n                        \n                        <EditArt  key={art[1].id * 10} record={art[1].id} title={art[1].title} description={art[1].description} price={art[1].price} images={art[1].images} paypalPrice={art[1].paypalPrice} slug={art[1].slug} />\n                        <EditArtImages key={art[1].id * 100} record={art[1].id} title={art[1].title} description={art[1].description} price={art[1].price} images={art[1].images} paypalPrice={art[1].paypalPrice} slug={art[1].slug} />\n                    </React.Fragment>\n                )\n            })}\n            \n    \n            </React.Fragment>\n        )\n\n    \n}","import ReactQuill from 'react-quill'\nimport React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport firebase from \"firebase/app\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { useDispatch } from 'react-redux'\n\nexport const BlogInput = () => {\n\n    const [blogContent, setBlogContent] = useState('')\n\n    const dispatch = useDispatch()\n\n    const handleChange = (value) => {\n        setBlogContent(value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        let newUuid = uuidv4()\n        let newUpdatedAt = (new Date()).toString()\n        firebase.database().ref('blogs/' + newUuid).set({\n            content: blogContent,\n            updatedAt: newUpdatedAt\n        })\n        dispatch({type: 'NEW_BLOG', payload: {content: blogContent, updatedAt: newUpdatedAt, blogId: newUuid}})\n        setBlogContent('')\n    }\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            \n            <ReactQuill value={blogContent} onChange={handleChange} modules={{ toolbar: [\n                    \n                    [ 'bold', 'italic', 'underline'],\n                    \n                    \n                    [{ 'header': '1' }, { 'header': '2' }, 'blockquote'],\n                    [{ 'list': 'ordered' }, { 'list': 'bullet'}], \n                    [ 'link', 'image', 'video']]}} />\n            {/* <Form.Control onChange={handleAboutTextChange} value={aboutTextChange} type=\"text\"></Form.Control> */}\n            <br></br>\n            <Button variant=\"outline-dark\" type=\"submit\">Submit blog entry</Button>\n                        \n        </Form>\n    )\n}","import firebase from \"firebase/app\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport React from 'react'\nimport { Button, Modal, Form } from 'react-bootstrap'\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css'\n// import Parser from 'html-react-parser'\n\nexport const EditBlog = (props) => {\n\n    const dispatch = useDispatch()\n\n    const blogId = props.blogId\n\n    // const blogContent = useSelector(state => {\n        \n    //     return state.blogs.blogs[blogId].content\n    // })\n    \n    const loaded = useSelector(state => state.blogs.loaded)\n\n    // debugger\n    const [blogContentChange, setblogContentChange] = useState(props.content)\n\n    // debugger\n    const [show, setShow] = useState(false)\n\n    // useEffect(() => {\n    //     let blogRef = firebase.database().ref('blogs/' + blogId)\n    //     // debugger\n    //     const getData = async () => {\n    //         await blogRef.once('value', snap => {\n    //             // debugger\n    //             const blogData = snap.val()\n    //             // debugger\n    //             setblogContentChange(blogData)\n    //             dispatch({type: \"GET_BLOG\", payload: blogData})\n    //         })\n    //     }\n    //     getData()\n    // },[dispatch])\n    \n    const handleClick = () => {\n        setShow(true)\n    }\n\n    const handleClose = () => {\n        setShow(false)\n    }\n\n    const handleblogContentChange = (value) => {\n        setblogContentChange(value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        // debugger\n        firebase.database().ref('blogs/' + blogId).update({\n            content: blogContentChange,\n            updatedAt: (new Date()).toString()\n        }, error => {\n            if (error) {\n\n            } else {\n                \n                dispatch({type: 'UPDATE_BLOG', payload: {\n                    blogId: blogId,\n                    content: blogContentChange,\n                    updatedAt: (new Date()).toString()\n                }})\n                setShow(false)\n            }\n        })\n    }\n\n    if (loaded) {\n        \n        return (\n            <React.Fragment>\n                \n                <Button variant=\"outline-info\" onClick={handleClick} >Edit entry</Button>\n                \n                <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Edit blog entry</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form onSubmit={handleSubmit}>\n                            {/* <Form.Label>Title</Form.Label>\n                            <Form.Control></Form.Control> */}\n                            \n                            <ReactQuill value={blogContentChange} onChange={handleblogContentChange} modules={{ toolbar: [\n                                    \n                                    [ 'bold', 'italic', 'underline'],\n                                    \n                                    \n                                    [{ 'header': '1' }, { 'header': '2' }, 'blockquote'],\n                                    [{ 'list': 'ordered' }, { 'list': 'bullet'}], \n                                    [ 'link', 'image', 'video']]}} />\n                            {/* <Form.Control onChange={handleblogContentChange} value={blogContentChange} type=\"text\"></Form.Control> */}\n                            <br></br>\n                            <Button type=\"submit\">Edit blog entry</Button>\n                        </Form>\n                    </Modal.Body>\n                </Modal>\n            </React.Fragment>\n        )\n    } else {\n        return (\n            <React.Fragment></React.Fragment>\n        )\n    }\n\n    \n}","import React from 'react'\nimport TimeAgo from 'javascript-time-ago'\nimport Parser from 'html-react-parser'\n// English.\nimport en from 'javascript-time-ago/locale/en'\nimport { Card } from 'react-bootstrap'\nimport { EditBlog } from './editBlog'\nimport { useAuth } from '../contexts/authContext'\nTimeAgo.addDefaultLocale(en)\n\n// Create formatter (English).\nconst timeAgo = new TimeAgo('en-US')\n\nexport const Blog = (props) => {\n    const { currentUser } = useAuth()\n    return (\n        <React.Fragment>\n            {!!currentUser && <EditBlog {...props} />}\n            <Card>\n                    <Card.Title>Created {timeAgo.format(new Date(props.updatedAt))}</Card.Title>\n                    <Card.Body>\n                    {Parser(props.content)}\n                    </Card.Body>\n                </Card>\n        </React.Fragment>\n    )\n}","import React, { useEffect } from 'react'\nimport { useAuth } from '../contexts/authContext'\n// import { v4 as uuidv4 } from 'uuid';\nimport { BlogInput } from './blogInput'\nimport { useDispatch, useSelector } from 'react-redux'\nimport firebase from \"firebase/app\";\n\nimport { Breadcrumb } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { Blog } from './blog'\n\n\nexport const BlogsContainer = (props) => {\n\n    const { currentUser } = useAuth()\n\n    const dispatch = useDispatch()\n\n    const loaded = useSelector(state => state.blogs.loaded)\n\n    const blogs = useSelector(state => state.blogs.blogs)\n\n    \n\n    useEffect(() => {\n        function getData() {\n            \n        \n            let blogsRef = firebase.database().ref('blogs/')\n            // debugger\n            return blogsRef.once('value', (snapshot) => {\n                // debugger\n                const data = snapshot.val()\n                // console.log(data)\n                dispatch({type: 'GET_BLOGS', payload: data})\n            })\n            \n        }\n        getData()\n    },[dispatch])\n\n    if(loaded) {\n        return (\n        \n            <React.Fragment>\n                <Breadcrumb>\n                        <Breadcrumb.Item ><Link to=\"/\">Home</Link></Breadcrumb.Item>\n                        \n                        <Breadcrumb.Item active>Blog</Breadcrumb.Item>\n                </Breadcrumb>\n                {!!currentUser && <BlogInput />}\n                <br></br>\n                {Object.entries(blogs).sort((a, b) => {\n            return new Date(b[1].updatedAt) - new Date(a[1].updatedAt)\n        }).map(blog => {\n            // debugger\n            return (\n                <React.Fragment>\n                    \n                    <Blog key={blog[0]} blogId={blog[0]} updatedAt={blog[1].updatedAt} content={blog[1].content}/>\n                </React.Fragment>\n            )\n        })}\n            </React.Fragment>\n        )\n    } else {\n        return (\n            <React.Fragment></React.Fragment>\n        )\n    }\n\n    \n}","import { Alert } from 'react-bootstrap';\nimport React, { useState } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { useAuth } from '../contexts/authContext'\nimport { Link, useHistory } from 'react-router-dom'\n\nexport default function Dashboard() {\n\n    const { currentUser, logout } = useAuth();\n\n    const [error, setError] = useState('')\n    const history = useHistory();\n\n    async function handleLogout() {\n        setError('')\n        try {\n            await logout()\n            history.push('/login')\n        } catch {\n            setError('Failed to logout')\n        }\n    }\n\n    return (\n        <React.Fragment>\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            <h1>Welcome page</h1>\n            <h1>{currentUser.email}</h1>\n            <Link to='/update-profile'>Update profile</Link>\n            <Button variant=\"link\" onClick={handleLogout} >Logout</Button>\n\n        </React.Fragment>\n        \n    )\n}","import { useRef, useLayoutEffect, useCallback } from 'react';\n\nconst useDynamicCallback = (callback: any) => {\n  const ref = useRef(callback);\n  useLayoutEffect(() => {\n    ref.current = callback;\n  }, [callback]);\n  return useCallback((...args) => ref.current(...args), []);\n}\n\nexport default useDynamicCallback;","\nimport * as React from 'react';\n\nimport { SqVerificationDetails, SqError, SqVerificationResult } from './models';\n\nexport interface ContextInterface {\n  /** Apple pay state*/\n  applePayState?: 'loading' | 'unavailable' | 'ready';\n  /** Unique form ID */\n  formId?: string;\n  /** Google pay state*/\n  googlePayState?: 'loading' | 'unavailable' | 'ready';\n  /** Masterpass state */\n  masterpassState?: 'loading' | 'unavailable' | 'ready';\n  /** Function that is called to create a nonce */\n  onCreateNonce?: () => void;\n  /** Function that is called to verify the buyer */\n  onVerifyBuyer?: (\n    source: string,\n    verificationDetails: SqVerificationDetails,\n    callback: (err: SqError, verificationResult: SqVerificationResult) => void\n  ) => void;\n}\n\n/**\n * Internal helper that the `SquarePaymentForm` uses to manage internal state and expose access to the SqPaymentForm library.\n *\n * This is available for developers who require more customization over their payment form implementation. Please refer to the\n * [customization](customization.md) page for usage details.\n */\nexport const Context = React.createContext({\n  applePayState: 'loading',\n  formId: '',\n  googlePayState: 'loading',\n  masterpassState: 'loading',\n  onCreateNonce: () => {},\n  onVerifyBuyer: (\n    source: string,\n    verificationDetails: SqVerificationDetails,\n    callback: (err: SqError, verificationResult: SqVerificationResult) => void\n  ) => {},\n});\n\nexport default Context;\n\n","import React, { useState, useEffect } from 'react';\n\nimport useDynamicCallback from './hooks/useDynamicCallback';\n\nimport Context from './Context';\n\nimport {\n  SqError,\n  SqCardData,\n  SqContact,\n  SqMethods,\n  SqPaymentRequest,\n  SqShippingOption,\n  SqPaymentFormConfiguration,\n  SqVerificationResult,\n  SqVerificationDetails,\n} from './models';\n\ndeclare class SqPaymentForm {\n  constructor(configuration: SqPaymentFormConfiguration);\n\n  build: () => void;\n  destroy: () => void;\n  recalculateSize: () => void;\n  requestCardNonce: () => void;\n  setPostalCode: (postal: string) => void;\n  focus: (id: string) => void;\n  masterpassImageUrl: () => string;\n  verifyBuyer: (\n    source: string,\n    verificationDetails: SqVerificationDetails,\n    callback: (err: SqError, verificationResult: SqVerificationResult) => void\n  ) => void;\n}\n\ninterface Props {\n  /** <b>Required for all features</b><br/><br/>Identifies the calling form with a verified application ID generated from the Square Application Dashboard. */\n  applicationId: string;\n  /** <b>Required for all features</b><br/><br/>Identifies the location of the merchant that is taking the payment. Obtained from the Square Application Dashboard - Locations tab.*/\n  locationId: string;\n  /** <b>Required for all features</b><br/><br/>Identifies the DOM form element. */\n  formId?: string;\n  /** Defines the internal styles applied to the rendered iframes. */\n  inputStyles?: {}[];\n  /** Defines the CSS class of input iframe elements. */\n  inputClass?: string;\n  /** Internal variable: used for logs. */\n  apiWrapper?: string;\n  /** Enables Sandbox mode. */\n  sandbox?: boolean;\n  /** Square payment form components. */\n  children?: React.ReactNode;\n\n  /** Changes the placeholder for the CVV input. */\n  placeholderCVV?: string;\n  /** Changes the placeholder for the postal code input. */\n  placeholderPostal?: string;\n  /** Changes the placeholder for the credit card input. */\n  placeholderCreditCard?: string;\n  /** Changes the placeholder for the expiration date input. */\n  placeholderExpiration?: string;\n  /** Changes the placeholder for the gift card input. */\n  placeholderGiftCard?: string;\n\n  /** <b>Required for all features</b><br/><br/>Invoked when payment form receives the result of a nonce generation request. The result will be a valid credit card or wallet nonce, or an error. */\n  cardNonceResponseReceived: (\n    errors: [SqError] | null,\n    nonce: string,\n    cardData: SqCardData,\n    buyerVerificationToken?: string,\n    billingContact?: SqContact,\n    shippingContact?: SqContact,\n    shippingOption?: SqShippingOption\n  ) => void;\n  /** <b>Required for digital wallets</b><br/><br/>Invoked when a digital wallet payment button is clicked. */\n  createPaymentRequest?: () => SqPaymentRequest;\n  /** <b>Required for SCA</b><br/><br/> */\n  createVerificationDetails?: () => SqVerificationDetails;\n  /* Triggered when the page renders to decide which, if any, digital wallet button should be rendered in the payment form. */\n  methodsSupported?: (methods: SqMethods) => void;\n  /** Invoked when visitors interact with the iframe elements. */\n  inputEventReceived?: () => void;\n  /** Invoked when payment form is fully loaded. */\n  paymentFormLoaded?: () => void;\n  /** Invoked when requestShippingAddress is true in PaymentRequest and the buyer selects a shipping address in the Apple Pay sheet or enters a new shipping address. */\n  shippingContactChanged?: (shippingContact: SqContact, done: ({}) => {}) => void;\n  /** Invoked when the buyer selects a shipping option in the Apple Pay sheet. */\n  shippingOptionChanged?: (shippingOption: SqShippingOption, done: ({}) => {}) => void;\n  /** Invoked when the payment form is hosted in an unsupported browser. */\n  unsupportedBrowserDetected?: () => void;\n\n  /** Postal code to be set on paymentFormLoaded. */\n  postalCode?: () => string;\n  /** Field to be focused on paymentFormLoaded (valid values are cardNumber, postalCode, expirationDate, cvv). */\n  focusField?: () => string;\n}\n\ninterface State {\n  applePayState: string;\n  googlePayState: string;\n  masterpassState: string;\n  errorMessage?: string;\n  scriptLoaded: boolean;\n}\n\n/**\n * Creates a Square Payment Form and renders form inputs to use inside of it.\n *\n * This component requires 3 arguments for basic use:\n * * **applicationId**: This can be found in your [Square Developer Dashboard](https://developer.squareup.com/apps)\n * for the current Square app you're developing.\n * * **locationId**: You can retrieve this from the [Square Connect v2 Locations API](https://docs.connect.squareup.com/api/connect/v2#navsection-locations),\n * or your [Square Developer Dashboard](https://developer.squareup.com/apps).\n * It determines which Square location will receive credit for payments made with this form.\n * * **cardNonceResponseReceived**: This callback gives you a nonce to pass to your backend server to make a \"charge\" request to Square.\n * * **createVerificationDetails**: This callback returns data used for [Strong Customer Authentication](https://developer.squareup.com/docs/sca-overview).\n *\n * ...and one additional argument for digital wallets:\n * * **createPaymentRequest**: This callback returns data to show information about the payment in the Apple Pay, Google Pay, and Masterpass interfaces.\n *\n * Please view the [Payment Form Data Models](https://docs.connect.squareup.com/api/paymentform) for additional information.\n */\nexport const SquarePaymentForm: React.FC<Props> = ({\n  apiWrapper = 'reactjs/0.7.3',\n  formId = 'sq-payment-form',\n  inputStyles = [\n    {\n      _mozOsxFontSmoothing: 'grayscale',\n      _webkitFontSmoothing: 'antialiased',\n      backgroundColor: 'transparent',\n      color: '#373F4A',\n      fontFamily: 'Helvetica Neue',\n      fontSize: '16px',\n      lineHeight: '24px',\n      padding: '16px',\n      placeholderColor: '#CCC',\n    },\n  ],\n  sandbox = false,\n  ...props\n}: Props) => {\n  const [applePayState, setApplePayState] = useState('loading');\n  const [googlePayState, setGooglePayState] = useState('loading');\n  const [masterpassState, setMasterpassState] = useState('loading');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [scriptLoaded, setScriptLoaded] = useState(false);\n  const [paymentForm, setPaymentForm] = useState<SqPaymentForm | undefined>(undefined);\n  const [formLoaded, setFormLoaded] = useState(false);\n\n  function cardNonceResponseReceived(\n    errors: [SqError],\n    nonce: string,\n    cardData: SqCardData,\n    billingContact: SqContact,\n    shippingContact: SqContact,\n    shippingOption: SqShippingOption\n  ): void {\n    if (errors || !props.createVerificationDetails) {\n      props.cardNonceResponseReceived(errors, nonce, cardData, '', billingContact, shippingContact, shippingOption);\n      return;\n    }\n\n    paymentForm &&\n      paymentForm.verifyBuyer(\n        nonce,\n        props.createVerificationDetails(),\n        (err: SqError | null, result: SqVerificationResult) => {\n          props.cardNonceResponseReceived(\n            err ? [err] : null,\n            nonce,\n            cardData,\n            result ? result.token : undefined,\n            billingContact,\n            shippingContact,\n            shippingOption\n          );\n        }\n      );\n  }\n\n  // Fixes stale closure issue with using React Hooks & SqPaymentForm callback functions\n  // https://github.com/facebook/react/issues/16956\n  const cardNonceResponseReceivedCallback = useDynamicCallback(cardNonceResponseReceived);\n\n  function createNonce(): void {\n    paymentForm && paymentForm.requestCardNonce();\n  }\n\n  function verifyBuyer(\n    source: string,\n    verificationDetails: SqVerificationDetails,\n    callback: (err: SqError, verificationResult: SqVerificationResult) => void\n  ): void {\n    paymentForm && paymentForm.verifyBuyer(source, verificationDetails, callback);\n  }\n\n  function methodsSupported(methods: SqMethods): void {\n    const keys = Object.keys(methods);\n\n    if (keys.includes('masterpass')) {\n      setMasterpassState(methods.masterpass === true ? 'ready' : 'unavailable');\n    }\n    if (keys.includes('applePay')) {\n      setApplePayState(methods.applePay === true ? 'ready' : 'unavailable');\n    }\n    if (keys.includes('googlePay')) {\n      setGooglePayState(methods.googlePay === true ? 'ready' : 'unavailable');\n    }\n\n    props.methodsSupported && props.methodsSupported(methods);\n  }\n\n  const paymentFormLoaded = () => {\n    setFormLoaded(true);\n    props.paymentFormLoaded && props.paymentFormLoaded();\n  };\n\n  function loadSqPaymentFormLibrary(onSuccess?: () => void, onError?: () => void): void {\n    if (document.getElementById('sq-payment-form-script') && typeof SqPaymentForm === 'function') {\n      onSuccess && onSuccess();\n      return;\n    }\n    const script = document.createElement('script');\n    script.id = 'sq-payment-form-script';\n    if (sandbox) {\n      script.src = 'https://js.squareupsandbox.com/v2/paymentform';\n    } else {\n      script.src = 'https://js.squareup.com/v2/paymentform';\n    }\n    script.onload = function() {\n      onSuccess && onSuccess();\n    };\n    script.onerror = function() {\n      onError && onError();\n    };\n    document.body.appendChild(script);\n  }\n\n  function buildSqPaymentFormConfiguration(props: Props): SqPaymentFormConfiguration {\n    const config: SqPaymentFormConfiguration = {\n      apiWrapper,\n      applicationId: props.applicationId,\n      autoBuild: false,\n      callbacks: {\n        // @ts-ignore: Always true error\n        cardNonceResponseReceived: props.cardNonceResponseReceived ? cardNonceResponseReceivedCallback : null, // handles missing callback error\n        createPaymentRequest: props.createPaymentRequest,\n        inputEventReceived: props.inputEventReceived,\n        methodsSupported,\n        paymentFormLoaded,\n        shippingContactChanged: props.shippingContactChanged,\n        shippingOptionChanged: props.shippingOptionChanged,\n        unsupportedBrowserDetected: props.unsupportedBrowserDetected,\n      },\n      locationId: props.locationId,\n    };\n\n    // \"The SqPaymentForm object in single-element payment form mode does not support digital wallets.\"\n    // https://developer.squareup.com/docs/payment-form/payment-form-walkthrough#single-element-payment-form-and-digital-wallet-support\n    if (document.getElementById(`${props.formId}-sq-card`)) {\n      config.card = {\n        elementId: `${formId}-sq-card`,\n        inputStyle: inputStyles && inputStyles[0],\n      };\n    } else if (document.getElementById(`${formId}-sq-gift-card`)) {\n      config.giftCard = {\n        elementId: `${formId}-sq-gift-card`,\n        placeholder: props.placeholderGiftCard || '• • • •  • • • •  • • • •  • • • •',\n      };\n      config.inputClass = props.inputClass || 'sq-input';\n      config.inputStyles = inputStyles;\n    } else {\n      config.inputClass = props.inputClass || 'sq-input';\n      config.inputStyles = inputStyles;\n\n      if (document.getElementById(`${formId}-sq-apple-pay`)) {\n        config.applePay = { elementId: `${formId}-sq-apple-pay` };\n      }\n      if (document.getElementById(`${formId}-sq-google-pay`)) {\n        config.googlePay = { elementId: `${formId}-sq-google-pay` };\n      }\n      if (document.getElementById(`${formId}-sq-masterpass`)) {\n        config.masterpass = { elementId: `${formId}-sq-masterpass` };\n      }\n\n      if (document.getElementById(`${formId}-sq-card-number`)) {\n        config.cardNumber = {\n          elementId: `${formId}-sq-card-number`,\n          placeholder: props.placeholderCreditCard || '• • • •  • • • •  • • • •  • • • •',\n        };\n      }\n      if (document.getElementById(`${formId}-sq-cvv`)) {\n        config.cvv = { elementId: `${formId}-sq-cvv`, placeholder: props.placeholderCVV || 'CVV ' };\n      }\n      if (document.getElementById(`${formId}-sq-postal-code`)) {\n        config.postalCode = {\n          elementId: `${formId}-sq-postal-code`,\n          placeholder: props.placeholderPostal || '12345',\n        };\n      } else {\n        config.postalCode = false;\n      }\n      if (document.getElementById(`${formId}-sq-expiration-date`)) {\n        config.expirationDate = {\n          elementId: `${formId}-sq-expiration-date`,\n          placeholder: props.placeholderExpiration || 'MM/YY',\n        };\n      }\n    }\n    return config;\n  }\n\n  function renderSqPaymentForm(): void {\n    if (!scriptLoaded || paymentForm || errorMessage.length > 0) {\n      return;\n    }\n    try {\n      const newPaymentForm = new SqPaymentForm(buildSqPaymentFormConfiguration(props));\n      newPaymentForm.build();\n      setPaymentForm(newPaymentForm);\n    } catch (error) {\n      const errorMessage = error.message || 'Unable to build Square payment form';\n      setErrorMessage(errorMessage);\n    }\n  }\n\n  useEffect(() => {\n    if (!formLoaded || !paymentForm) {\n      return;\n    }\n    paymentForm.recalculateSize();\n    props.postalCode && paymentForm.setPostalCode(props.postalCode());\n    props.focusField && paymentForm.focus(props.focusField());\n  }, [formLoaded, paymentForm]);\n\n  useEffect(() => {\n    loadSqPaymentFormLibrary(\n      () => setScriptLoaded(true),\n      () => setErrorMessage('Unable to load Square payment library')\n    );\n  }, []);\n\n  useEffect(() => {\n    renderSqPaymentForm();\n    return () => {\n      if (paymentForm) {\n        paymentForm.destroy();\n        setPaymentForm(undefined);\n      }\n    };\n  }, [scriptLoaded]);\n\n  useEffect(() => {\n    if (!paymentForm || masterpassState !== 'ready') {\n      return;\n    }\n    const srcBtn = document.getElementById(`${formId}-sq-masterpass`);\n    if (!srcBtn) {\n      return;\n    }\n    const imageUrl = paymentForm.masterpassImageUrl();\n    srcBtn.style.display = 'inline-block';\n    srcBtn.style.backgroundImage = `url(${imageUrl})`;\n  }, [paymentForm, masterpassState]);\n\n  if (errorMessage) {\n    return (\n      <div className=\"sq-payment-form\">\n        <div className=\"sq-error-message\">{errorMessage}</div>\n      </div>\n    );\n  }\n\n  const context = {\n    applePayState,\n    formId,\n    googlePayState,\n    masterpassState,\n    onCreateNonce: createNonce,\n    onVerifyBuyer: verifyBuyer,\n  };\n\n  return (\n    <Context.Provider value={context}>\n      <div id={formId} className=\"sq-payment-form\">\n        {props.children}\n      </div>\n    </Context.Provider>\n  );\n};\n","import React, { useContext } from 'react';\n\nimport Context from './Context';\n\ninterface Props {\n  /** Placeholder view when the Apple Pay is being initialized */\n  loadingView?: React.ReactNode;\n  /** Placeholder view when Apple Pay is not available */\n  unavailableView?: React.ReactNode;\n}\n\n/**\n * Renders an Apple Pay button to use in the Square Payment Form, pre-styled to meet Apple's Human Interface Guidelines.\n */\nexport const ApplePayButton: React.FC<Props> = (props: Props) => {\n  const context = useContext(Context);\n  return (\n    <div>\n      <button\n        id={`${context.formId}-sq-apple-pay`}\n        className=\"sq-apple-pay\"\n        style={{ display: context.applePayState === 'ready' ? 'block' : 'none' }}\n      />\n      {context.applePayState === 'loading' && props.loadingView}\n      {context.applePayState === 'unavailable' && props.unavailableView}\n    </div>\n  );\n};\n","\nimport React, { useContext } from 'react';\n\nimport Context from './Context';\n\ninterface Props {\n  /** Input field label */\n  label?: string;\n}\n\n/**\n * Renders a placeholder element for the CVV code. The SqPaymentForm JS library will replace this element with\n * a secure `<iframe>` tag that will render an `<input>` field for the CVV code.\n *\n * When accepting credit card payments, you **must** have this component inside your `SquarePaymentForm`.\n */\nexport const CreditCardCVVInput: React.FC<Props> = (props: Props) => {\n  const context = useContext(Context);\n  return (\n    <div>\n      {props.label && <span className=\"sq-label\">{props.label}</span>}\n      <div id={`${context.formId}-sq-cvv`}></div>\n    </div>\n  );\n};\n\nCreditCardCVVInput.defaultProps = {\n  label: 'CVV',\n};\n\n","import React, { useContext } from 'react';\n\nimport Context from './Context';\n\ninterface Props {\n  /** Input field label */\n  label?: string;\n}\n\n/**\n * Renders a placeholder element for the expiration date. The SqPaymentForm JS library will replace this\n * element with a secure `<iframe>` tag that will render an `<input>` field for the expiration date.\n *\n * When accepting credit card payments, you **must** have this component inside your `SquarePaymentForm`.\n */\nexport const CreditCardExpirationDateInput: React.FC<Props> = (props: Props) => {\n  const context = useContext(Context);\n  return (\n    <div>\n      {props.label && <span className=\"sq-label\">{props.label}</span>}\n      <div id={`${context.formId}-sq-expiration-date`}></div>\n    </div>\n  );\n};\n\nCreditCardExpirationDateInput.defaultProps = {\n  label: 'Expiration',\n};\n","import React, { useContext } from 'react';\n\nimport Context from './Context';\n\ninterface Props {\n  /** Input field label */\n  label?: string;\n}\n/**\n * Renders a placeholder element for the card number. The SqPaymentForm JS library will replace this\n * element with a secure `<iframe>` tag that will render an `<input>` field for the card number.\n *\n * When accepting credit card payments, you **must** have this component inside your `SquarePaymentForm`.\n */\nexport const CreditCardNumberInput: React.FC<Props> = (props: Props) => {\n  const context = useContext(Context);\n  return (\n    <div>\n      {props.label && <span className=\"sq-label\">{props.label}</span>}\n      <div id={`${context.formId}-sq-card-number`}></div>\n    </div>\n  );\n};\n\nCreditCardNumberInput.defaultProps = {\n  label: 'Credit Card',\n};\n","import React, { useContext } from 'react';\n\nimport Context from './Context';\n\ninterface Props {\n  /** Input field label */\n  label?: string;\n}\n/**\n * Renders a placeholder element for the postal code. The SqPaymentForm JS library will replace this\n * element with a secure `<iframe>` tag that will render an `<input>` field for the postal code.\n *\n * When accepting credit card payments, you **must** have this component inside your `SquarePaymentForm`.\n */\nexport const CreditCardPostalCodeInput: React.FC<Props> = (props: Props) => {\n  const context = useContext(Context);\n  return (\n    <div>\n      {props.label && <span className=\"sq-label\">{props.label}</span>}\n      <div id={`${context.formId}-sq-postal-code`}></div>\n    </div>\n  );\n};\n\nCreditCardPostalCodeInput.defaultProps = {\n  label: 'Postal',\n};\n","import React, { useContext } from 'react';\n\nimport Context from './Context';\n\ninterface Props {\n  /** Input field label */\n  children?: React.ReactNode;\n}\n/**\n * Renders a button that will create a card nonce using Square's SqPaymentForm JS library and calls\n * `onCardNonceResponseReceived` afterwards.\n *\n * When accepting credit card payments, you **must** have this component inside your `SquarePaymentForm`.\n */\nexport const CreditCardSubmitButton: React.FC<Props> = (props: Props) => {\n  const context = useContext(Context);\n  return (\n    <button className=\"sq-creditcard\" onClick={context.onCreateNonce}>\n      {props.children ? props.children : 'Pay'}\n    </button>\n  );\n};\n","import React, { useContext } from 'react';\n\nimport Context from './Context';\n\ninterface Props {\n  /** Placeholder view when the Google Pay is being initialized */\n  loadingView?: React.ReactNode;\n  /** Placeholder view when Google Pay is not available */\n  unavailableView?: React.ReactNode;\n}\n/**\n * Renders a Google Pay button to use in the Square Payment Form, pre-styled to meet Google's branding guidelines.\n */\nexport const GooglePayButton: React.FC<Props> = (props: Props) => {\n  const context = useContext(Context);\n  return (\n    <div>\n      <button\n        id={`${context.formId}-sq-google-pay`}\n        className=\"sq-google-pay\"\n        style={{ display: context.googlePayState === 'ready' ? 'block' : 'none' }}\n      />\n      {context.googlePayState === 'loading' && props.loadingView}\n      {context.googlePayState === 'unavailable' && props.unavailableView}\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\n\nimport Context from './Context';\n\ninterface Props {\n  /** Placeholder view when the Masterpass is being initialized */\n  loadingView?: React.ReactNode;\n  /** Placeholder view when Masterpass is not available */\n  unavailableView?: React.ReactNode;\n}\n\n/**\n * Renders a Masterpass button to use in the Square Payment Form, pre-styled to meet Masterpass's branding guidelines.\n */\nexport const MasterpassButton: React.FC<Props> = (props: Props) => {\n  const context = useContext(Context);\n  return (\n    <div>\n      <button\n        id={`${context.formId}-sq-masterpass`}\n        className=\"sq-masterpass\"\n        style={{ display: context.masterpassState === 'ready' ? 'block' : 'none' }}\n      />\n      {context.masterpassState === 'loading' && props.loadingView}\n      {context.masterpassState === 'unavailable' && props.unavailableView}\n    </div>\n  );\n};\n","import React, { useRef, useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid'\nimport { Form, Table, Col, Row } from 'react-bootstrap'\nimport { useSelector } from 'react-redux'\n\nimport {\n  SquarePaymentForm,\n  ApplePayButton,\n  CreditCardCVVInput,\n  CreditCardExpirationDateInput,\n  CreditCardNumberInput,\n  CreditCardPostalCodeInput,\n  CreditCardSubmitButton,\n  GooglePayButton,\n  MasterpassButton,\n} from './squarePayIndex';\nimport '../components/squarepay/default.css';\n\nconst APPLICATION_ID = process.env.REACT_APP_SQUAREPAY_SANDBOX_ID;\nconst LOCATION_ID = process.env.REACT_APP_SQUAREPAY_LOCATION_ID;\n\nexport const PaymentPage = () => {\n\n  const shippingFirstNameRef = useRef()\n  const shippingLastNameRef = useRef()\n  const shippingAddress1Ref = useRef()\n  const shippingAddress2Ref = useRef()\n  const shippingCityRef = useRef()\n  const shippingStateRef = useRef()\n  const shippingZipRef = useRef()\n  const shippingPhoneRef = useRef()\n  const billingFirstNameRef = useRef()\n  const billingLastNameRef = useRef()\n  const billingAddress1Ref = useRef()\n  const billingAddress2Ref = useRef()\n  const billingCityRef = useRef()\n  const billingStateRef = useRef()\n  const billingZipRef = useRef()\n  const billingPhoneRef = useRef()\n  const emailRef = useRef()\n\n  const jwtCart = useSelector(state => state.cart.jwtCart)\n\n    let cart = []\n\n    for(const [key, value] of Object.entries(jwtCart)) {\n      if (value[\"item\"]) {\n          cart.push(value[\"item\"])\n      }\n      \n  }\n\n  const currentUserId = useSelector(state => state.user.user)\n\n  const [sameShippingBilling, setSameShippingBilling] = useState(false)\n\n\n    const handleShippingBillingCheckbox = (event) => {\n        setSameShippingBilling(event.target.checked)\n    }\n\n    useEffect(() => {\n        // debugger\n        if (sameShippingBilling) {\n            shippingFirstNameRef.current.value = billingFirstNameRef.current.value\n            shippingLastNameRef.current.value = billingLastNameRef.current.value\n            shippingAddress1Ref.current.value = billingAddress1Ref.current.value\n            shippingAddress2Ref.current.value = billingAddress2Ref.current.value\n            shippingCityRef.current.value = billingCityRef.current.value\n            shippingStateRef.current.value = billingStateRef.current.value\n            shippingZipRef.current.value = billingZipRef.current.value\n            shippingPhoneRef.current.value = billingPhoneRef.current.value\n        }\n    },[sameShippingBilling])\n\n  const [errorMessages, setErrorMessages] = useState([]);\n\n  function cardNonceResponseReceived(errors, nonce, cardData, buyerVerificationToken) {\n    if (errors) {\n      setErrorMessages(errors.map(error => error.message));\n      return;\n    }\n\n    setErrorMessages([]);\n\n    // alert('nonce created: ' + nonce + ', buyerVerificationToken: ' + buyerVerificationToken);\n    \n    // API.post('/payments', data: { nonce: nonce, buyerVerificationToken: buyerVerificationToken }) // implement this\n    const idempotency_key = uuidv4();\n\n    if (errors) {\n      // Log errors from nonce generation to the browser developer console.\n      console.error('Encountered errors:');\n      errors.forEach(function (error) {\n          console.error('  ' + error.message);\n      });\n      alert('Encountered errors, check browser developer console for more details');\n       return;\n  }\n  //TODO: Replace alert with code in step 2.1\n  // return fetch(`http://127.0.0.1:5002/susie-wang-art/us-central1/payments/`, {\n  return fetch('https://us-central1-susie-wang-art.cloudfunctions.net/payments/', {\n    // fetch('https://connect.squareupsandbox.com/v2/payments', {\n    method: 'POST',\n    headers: {\n        \n        'Square-Version': \"2020-12-16\",\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + process.env.REACT_APP_SQUAREPAY_SANDBOX_ACCESS_TOKEN,\n        \n        \n    },\n    body: JSON.stringify({\n        \n        idempotency_key: idempotency_key,\n        location_id: LOCATION_ID,\n        nonce: nonce,\n        amount: cart.reduce((acc, item) => {\n          return acc + parseInt(item.price)\n      }, 0) * 100,\n        uid: localStorage.getItem('susieartJWT'),\n        emailAddress: emailRef.current.value,\n        orderLocaleDate: (new Date()).toLocaleDateString('en', { year: 'numeric', month: 'long', day: 'numeric' }) + \" \" + (new Date()).toLocaleTimeString('en-US') + \" \" + (new Date()).toString().match(/([A-Z]+[\\+-][0-9]+.*)/)[1],\n        billing: {\n          firstName: billingFirstNameRef.current.value,\n          lastName: billingLastNameRef.current.value,\n          address1: billingAddress1Ref.current.value,\n          address2: billingAddress2Ref.current.value,\n          city: billingCityRef.current.value,\n          state: billingStateRef.current.value,\n          zip: billingZipRef.current.value,\n          phone: billingPhoneRef.current.value\n        },\n        shipping: {\n          firstName: shippingFirstNameRef.current.value,\n          lastName: shippingLastNameRef.current.value,\n          address1: shippingAddress1Ref.current.value,\n          address2: shippingAddress2Ref.current.value,\n          city: shippingCityRef.current.value,\n          state: shippingStateRef.current.value,\n          zip: shippingZipRef.current.value,\n          phone: shippingPhoneRef.current.value\n        },\n        buyerVerificationToken: buyerVerificationToken\n    })   \n    })\n    .catch(err => {\n    alert('Network error: ' + err);\n    })\n    .then(response => {\n        console.log(response)\n        \n    if (!response.ok) {\n        return response.json().then(\n        errorInfo => Promise.reject(errorInfo));\n    }\n    return response.json();\n    })\n    .then(data => {\n    console.log(data);\n    alert('Payment complete successfully!');\n    })\n    .catch(err => {\n    console.log(err);\n    alert('Payment failed to complete!\\nCheck browser developer console for more details');\n    });\n  }\n\n  function createPaymentRequest() {\n    return {\n      requestShippingAddress: false,\n      requestBillingInfo: true,\n      currencyCode: 'USD',\n      countryCode: 'US',\n      total: {\n        label: 'MERCHANT NAME',\n        amount: '1',\n        pending: false,\n      },\n      lineItems: [\n        {\n          label: 'Subtotal',\n          amount: '1',\n          pending: false,\n        },\n      ],\n    };\n  }\n\n  function createVerificationDetails() {\n    let charge = cart.reduce((acc, item) => {\n      return acc + parseInt(item.price)\n    }, 0).toString()\n    return {\n      amount: charge,\n      currencyCode: 'USD',\n      intent: 'CHARGE',\n      billingContact: {\n        familyName: billingLastNameRef.current.value,\n        givenName: billingFirstNameRef.current.value,\n        email: emailRef.current.value,\n        country: 'US',\n        city: billingCityRef.current.value,\n        addressLines: [billingAddress1Ref.current.value, billingAddress2Ref.current.value],\n        postalCode: billingZipRef.current.value,\n        phone: billingPhoneRef.current.value,\n      },\n    };\n  }\n\n  function postalCode() {\n    const postalCode = billingZipRef.current.value; // your logic here\n    return postalCode;\n  }\n\n  function focusField() {\n    return 'cardNumber';\n  }\n\n  const loadingView = <div className=\"sq-wallet-loading\"></div>;\n  const unavailableApple = (\n    <div className=\"sq-wallet-unavailable\">Apple pay unavailable. Open safari on desktop or mobile to use.</div>\n  );\n  const unavailableGoogle = <div className=\"sq-wallet-unavailable\">Google pay unavailable.</div>;\n  const unavailableMasterpass = <div className=\"sq-wallet-unavailable\">Masterpass unavailable.</div>;\n  \n  // function handleSubmit() {\n  //   debugger\n  // }\n\n  return (\n    <>\n      <h2>Checkout</h2>\n            <Table bordered hover>\n                <tr>\n                    <td>\n                        Items:       \n\n                    </td>\n                    <td>\n                        ${cart.reduce((acc, item) => {\n                          \n                            return acc + parseInt(item.price)\n                        }, 0)}.00      \n                    </td> \n                </tr>\n                <tr>\n                    <td>\n                        Subtotal:       \n                    </td> \n                    <td>\n                        ${cart.reduce((acc, item) => {\n                            return acc + parseInt(item.price)\n                        }, 0)}.00 \n                    </td> \n                </tr>\n                <tr>\n                    <td>\n                        Shipping:       \n                    </td> \n                    <td>\n                        $0.00 \n                    </td> \n                </tr>\n                <tr>\n                    <td>\n                        Total:       \n                    </td> \n                    <td>\n                        ${cart.reduce((acc, item) => {\n                            return acc + parseInt(item.price)\n                        }, 0)}.00 \n                    </td> \n                </tr>\n            </Table>\n\n            \n\n            <Form>\n                <Form.Group as={Row}>\n                    <Form.Label column sm=\"2\">Email address</Form.Label>\n                    <Col sm=\"10\">\n                        <Form.Control ref={emailRef}></Form.Control>\n                    </Col>\n                    \n                </Form.Group>\n                \n                <h2>Billing address</h2>\n                \n                <Form.Group as={Row}>\n                    \n                    <Form.Label column sm=\"2\">First name</Form.Label>\n                    <Col sm=\"10\">\n                    <Form.Control type=\"text\" ref={billingFirstNameRef}></Form.Control>\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>  \n                    <Form.Label column sm=\"2\">Last name</Form.Label>\n                    <Col sm=\"10\">\n                    <Form.Control type=\"text\" ref={billingLastNameRef}></Form.Control>\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column sm=\"2\">Address 1</Form.Label>\n                    <Col sm=\"10\">\n                        <Form.Control type=\"text\" ref={billingAddress1Ref}></Form.Control>\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column sm=\"2\">Address 2</Form.Label>\n                    <Col sm=\"10\">\n                        <Form.Control type=\"text\" ref={billingAddress2Ref}></Form.Control>\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column sm=\"2\">City</Form.Label>\n                    <Col sm=\"10\">\n                        <Form.Control type=\"text\" ref={billingCityRef}></Form.Control>\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column sm=\"2\">State</Form.Label>\n                    <Col sm=\"10\">\n                        <Form.Control type=\"text\" ref={billingStateRef}></Form.Control>\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column sm=\"2\">Zip code</Form.Label>\n                    <Col sm=\"10\">\n                        <Form.Control type=\"text\" ref={billingZipRef}></Form.Control>\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column sm=\"2\">Phone</Form.Label>\n                    <Col sm=\"10\">\n                        <Form.Control type=\"text\" ref={billingPhoneRef}></Form.Control>\n                    </Col>\n                </Form.Group>\n\n                <h2>Shipping address</h2>\n                <Form.Check type=\"checkbox\" value={sameShippingBilling} onChange={handleShippingBillingCheckbox} label=\"Same as billing\" defaultChecked={false}></Form.Check>\n                <Form.Group as={Row}>\n                    \n                    <Form.Label column sm=\"2\">First name</Form.Label>\n                    <Col sm=\"10\">\n                    <Form.Control type=\"text\" ref={shippingFirstNameRef}></Form.Control>\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>    \n                    <Form.Label column sm=\"2\">Last name</Form.Label>\n                    <Col sm=\"10\">\n                    <Form.Control type=\"text\" ref={shippingLastNameRef}></Form.Control>\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column sm=\"2\">Address 1</Form.Label>\n                    <Col sm=\"10\">\n                        <Form.Control type=\"text\" ref={shippingAddress1Ref}></Form.Control>\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column sm=\"2\">Address 2</Form.Label>\n                    <Col sm=\"10\">\n                        <Form.Control type=\"text\" ref={shippingAddress2Ref}></Form.Control>\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column sm=\"2\">City</Form.Label>\n                    <Col sm=\"10\">\n                        <Form.Control type=\"text\" ref={shippingCityRef}></Form.Control>\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column sm=\"2\">State</Form.Label>\n                    <Col sm=\"10\">\n                        <Form.Control type=\"text\" ref={shippingStateRef}></Form.Control>\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column sm=\"2\">Zip code</Form.Label>\n                    <Col sm=\"10\">\n                        <Form.Control type=\"text\" ref={shippingZipRef}></Form.Control>\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column sm=\"2\">Phone</Form.Label>\n                    <Col sm=\"10\">\n                        <Form.Control type=\"text\" ref={shippingPhoneRef}></Form.Control>\n                    </Col>\n                </Form.Group>\n              </Form>\n\n    <SquarePaymentForm\n      sandbox={true}\n      applicationId={APPLICATION_ID}\n      locationId={LOCATION_ID}\n      cardNonceResponseReceived={cardNonceResponseReceived}\n      createPaymentRequest={createPaymentRequest}\n      createVerificationDetails={createVerificationDetails}\n      postalCode={postalCode}\n      focusField={focusField}\n    >\n      <ApplePayButton loadingView={loadingView} unavailableView={unavailableApple} />\n      <GooglePayButton loadingView={loadingView} unavailableView={unavailableGoogle} />\n      <MasterpassButton loadingView={loadingView} unavailableView={unavailableMasterpass} />\n\n      <div className=\"sq-divider\">\n        <span className=\"sq-divider-label\">Or</span>\n        <hr className=\"sq-divider-hr\" />\n      </div>\n\n      <fieldset className=\"sq-fieldset\">\n        <CreditCardNumberInput />\n\n        <div className=\"sq-form-third\">\n          <CreditCardExpirationDateInput />\n        </div>\n\n        <div className=\"sq-form-third\">\n          <CreditCardPostalCodeInput />\n        </div>\n\n        <div className=\"sq-form-third\">\n          <CreditCardCVVInput />\n        </div>\n      </fieldset>\n\n      <CreditCardSubmitButton>Place order</CreditCardSubmitButton>\n\n      <div className=\"sq-error-message\">\n        {errorMessages.map(errorMessage => (\n          <li key={`sq-error-${errorMessage}`}>{errorMessage}</li>\n        ))}\n      </div>\n    </SquarePaymentForm>\n\n    </>\n  );\n};\n\nexport default PaymentPage;\n","import React, { Component } from 'react'\n// import { SqPaymentForm } from 'https://js.squareup.com/v2/paymentform'\nimport { PaymentPage } from './PaymentPage'\n\nexport default class SquarePay extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loaded: false,\n            paymentForm: \"\"\n        }\n\n        const that = this;\n        let sqPaymentScript = document.createElement('script');\n        sqPaymentScript.src = \"https://js.squareup.com/v2/paymentform\";\n        sqPaymentScript.type = \"text/javascript\"\n        sqPaymentScript.async = false;\n        sqPaymentScript.onload = ()=>{that.setState({\n        loaded: true\n        })};\n        document.getElementsByTagName(\"head\")[0].appendChild(sqPaymentScript);\n    }\n\n    componentDidMount() {\n        \n    }\n\n    onGetCardNonce(event) {\n\n        // Don't submit the form until SqPaymentForm returns with a nonce\n        event.preventDefault();\n        // Request a nonce from the SqPaymentForm object\n        this.state.paymentForm.requestCardNonce();\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <PaymentPage />\n            </React.Fragment>\n        //   this.state.loaded &&\n        //     <PaymentForm\n        //       paymentForm={ window.SqPaymentForm }\n        //     />\n        );\n      }\n}\n\n","import { useSelector, useDispatch } from 'react-redux'\nimport { Table, Button } from 'react-bootstrap'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport { fetchCart } from '../actions/fetchCart'\nimport { v4 as uuidv4 } from 'uuid'\nimport { patchCart } from '../actions/patchCart'\n\nexport const ShoppingCart = (props) => {\n\n    const currentUserId = useSelector(state => state.user.user)\n\n    const dispatch = useDispatch()\n\n    if (currentUserId.length === 0) {\n        \n        if (localStorage.getItem('susieartuid') === null) {\n            const guestUserId = uuidv4()\n            localStorage.setItem('susieartuid', guestUserId)\n            dispatch({type: 'SET_USER', payload: {uid: guestUserId}})\n        } else {\n            dispatch({type: 'SET_USER', payload: {uid: localStorage.getItem('susieartuid')}})\n            dispatch(fetchCart(currentUserId))\n        }\n  \n    }\n\n    const jwtCart = useSelector(state => state.cart.jwtCart)\n\n    let cart = []\n\n    for(const [key, value] of Object.entries(jwtCart)) {\n        if (value[\"item\"]) {\n            cart.push(value[\"item\"])\n        }\n        \n    }\n\n    const handleRemoveItem = (event, lineItem) => {\n        dispatch(patchCart(lineItem))\n    }\n\n    return (\n        <React.Fragment>\n            <h1>Shopping Cart</h1>\n            <Table borderless hover responsive style={{width: \"100%\"}}>\n                {/* <thead>\n                    <tr>\n                        <th>Art image</th>\n                        <th>Title</th>\n                        <th>Description</th>\n                        <th>Quantity</th>\n                        <th>Price</th>\n                    </tr>\n                </thead> */}\n                <tbody>\n                {cart.map(item => {\n                \n                return (\n                    <>\n                    \n                    \n                    <tr>\n                        <td colSpan=\"3\" >\n                            <img src={item.imageUrl.url} alt={item.imageUrl.alt}/>\n                            <br></br><br></br>\n                            <Button variant=\"outline-dark\" size=\"sm\" onClick={(event) => handleRemoveItem(event, item.title)}>remove</Button>\n                        </td>\n                        <td style={{textAlign: \"center\", verticalAlign: \"center\"}}>\n                            {item.title} <br></br>\n                            {item.description}<br></br><br></br>\n                            ${item.price}.00\n                            \n                            \n                            \n                        \n                        </td>\n                        \n                    </tr>\n                   \n                    </>\n                )\n                \n\n            })}\n               \n                \n\n            \n                \n                {/* <tr>\n                        \n                        <td colSpan=\"3\">Subtotal</td>\n                        <td>${cart.reduce((acc, item) => {\n                            return acc + parseInt(item.price)\n                        }, 0)}.00</td>\n                    \n                </tr>\n                <tr>\n                        \n                        \n                        <td colSpan=\"3\">Shipping</td>\n                        <td>$0.00</td>\n                    \n                </tr>\n                <tr>\n                        \n                        \n                        <td colSpan=\"3\">Total</td>\n                        <td>${cart.reduce((acc, item) => {\n                            return acc + parseInt(item.price)\n                        }, 0)}.00</td>\n                    \n                </tr> */}\n                </tbody>\n            </Table>\n            \n            <Button as={Link} to=\"/checkout\">Checkout</Button>\n            \n        </React.Fragment>\n    )\n}","export function patchCart(lineItem) {\n    return (dispatch) => {\n        dispatch({type: 'START_PATCH_CART'})\n        // debugger\n        const token = localStorage.getItem('susieartJWT')\n        // return fetch(`http://127.0.0.1:5002/susie-wang-art/us-central1/carts`, {\n        return fetch(`https://us-central1-susie-wang-art.cloudfunctions.net/carts`, {\n            credentials: \"include\",\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + token\n            },\n\n            body: JSON.stringify({\n                \n                lineItem: lineItem\n            })\n        })\n        // fetch(`http://localhost:3002/arts.json`)\n        .then(resp => resp.json())\n        .then(data => {\n            //debugger\n            \n            dispatch({type: 'UPDATE_CART', payload: data})\n            //console.log(data)\n            //debugger\n        })\n    }\n}","\nimport './App.css';\n// import { FirebaseDatabaseProvider } from \"@react-firebase/database\";\n// import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport 'firebase/database';\nimport React from 'react'\n// import fire from './firebaseConfig'\n// import Messages from './components/messages'\n\n// import Signup from './components/signup'\nimport { AuthProvider } from './contexts/authContext';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport Login from './components/login'\nimport PrivateRoute from './components/privateRoute'\nimport ForgotPassword from './components/forgotPassword'\nimport UpdateProfile from './components/updateProfile'\nimport { Home } from './components/pages/home'\nimport { Nav, Navbar } from 'react-bootstrap'\nimport { About } from './components/about'\nimport { ArtsContainer } from './components/artsContainer';\nimport { ArtShow } from './components/artShow';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFacebook, faTwitter, faInstagram } from '@fortawesome/free-brands-svg-icons'\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons'\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { EditArtsContainer } from './components/editArtsContainer'\nimport { EditAbout } from './components/editAbout'\nimport { BlogsContainer } from './components/blogsContainer';\nimport { Link } from 'react-router-dom'\nimport Dashboard from './components/dashboard';\nimport SquarePay from './components/squarePay';\nimport { ShoppingCart } from './components/shoppingCart';\n// import { Checkout } from './components/checkout';\nimport PaymentPage from './components/PaymentPage';\n// import { useAuth } from './contexts/authContext'\n// import { v4 as uuidv4 } from 'uuid'\n// import { useDispatch } from 'react-redux'\n\nconst App = () => {\n  \n  \n\n  return (\n    <div className=\"App\" style={{fontFamily: \"'Times New Roman', serif\"}}>\n      \n      \n        <Router>\n          <AuthProvider>\n              <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand>\n                  <a href=\"https://www.facebook.com/Susie.Ketty.Riley\"><FontAwesomeIcon icon={faFacebook} /> </a>\n                  <a href=\"https://twitter.com/SusieWangCFA\"><FontAwesomeIcon icon={faTwitter} /> </a>\n                  <a href=\"https://www.instagram.com/susie_wang26/\"><FontAwesomeIcon icon={faInstagram} /> </a>\n                </Navbar.Brand>\n                <Link to='/shoppingcart'><FontAwesomeIcon icon={faShoppingCart} /></Link>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                \n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                  <Nav className=\"mr-auto\">\n                    <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n                    <Nav.Link as={Link} to=\"/about\">About</Nav.Link>\n                    <Nav.Link as={Link} to=\"/products\">Products</Nav.Link>\n                    <Nav.Link as={Link} to=\"/blog\">Blog</Nav.Link>\n                    {/* {!! currentUser && <Nav.Link href=\"/editproducts\">Edit art</Nav.Link>} */}\n                  </Nav>\n                  {/* <Form inline>\n                    <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                    <Button variant=\"outline-success\">Search</Button>\n                  </Form> */}\n                </Navbar.Collapse>\n            </Navbar>\n            <Switch>\n              <Route exact path='/' component={Home} />\n              <Route path='/about' component={About} />\n              <Route exact path='/products' component={ArtsContainer} />\n              <Route path='/products/:artTitle' component={ArtShow} />\n              <PrivateRoute exact path=\"/editproducts\" component={EditArtsContainer}/>\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard}/>\n              <PrivateRoute exact path=\"/editabout\" component={EditAbout}/>\n              <PrivateRoute path='/update-profile' component={UpdateProfile} />\n              <PrivateRoute exact path=\"/squarepay\" component={SquarePay}/>\n              <Route exact path='/blog' component={BlogsContainer} />\n              <Route exact path='/shoppingcart' component={ShoppingCart} />\n              <Route exact path='/checkout' component={PaymentPage} />\n              {/* <Route path=\"/signup\" component={Signup} /> */}\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/forgot-password\" component={ForgotPassword}></Route>\n            </Switch>\n            \n          </AuthProvider>\n        </Router>\n      \n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export function artsReducer(state = { arts: [], requesting: false, loaded: false}, action) {\n    let art;\n    let arts;\n    switch(action.type) {\n\n        case 'START_REQUESTING_ARTS':\n\n            return {\n                ...state,\n                arts: [],\n                requesting: true,\n                loaded: false\n            }\n\n        case 'GET_ARTS':\n            //debugger\n            return {\n                ...state,\n                arts: action.payload,\n                requesting: false,\n                loaded: true\n            }\n\n        case 'UPDATE_ART':\n\n            // debugger\n            arts = {...state.arts}\n\n            art = arts[action.payload.slug]\n\n            art.description = action.payload.description\n\n            art.price = action.payload.price\n\n            delete arts[action.payload.slug]\n            \n            arts[action.payload.slug] = art\n\n            //debugger\n            return {\n                ...state,\n                arts: arts\n            }\n\n        default:\n            return state\n    }\n}","export function artReducer(state = { art: [], images: [], requesting: false, requestingImages: false, artLoaded: false, imagesLoaded: false}, action) {\n\n\n    switch(action.type) {\n\n        \n\n        case 'START_REQUESTING_ART':\n\n            return {\n                ...state,\n                art: [],\n                requesting: true,\n                artLoaded: false\n            }\n\n        case 'GET_ART':\n            //debugger\n            return {\n                ...state,\n                art: action.payload,\n\n                requesting: false,\n                artLoaded: true\n            }\n        \n\n        case 'START_REQUESTING_IMAGES':\n\n            return {\n                ...state,\n                images: [],\n                requestingImages: true,\n                imagesLoaded: false\n            }\n\n        case 'GET_IMAGE':\n\n            return {\n                ...state,\n                images: [...state.images, action.payload],\n                requesting: false,\n                imagesLoaded: false\n            }\n        \n        case 'FINISHED_LOADING_IMAGES':\n\n            return {\n                ...state,\n                imagesLoaded: true,\n                requestingImages: false\n            }\n\n        default:\n            return state\n    }\n}","export function aboutReducer(state = { about: [], requesting: false, loaded: false}, action) {\n\n\n    switch(action.type) {\n\n        case 'REQUESTING_ABOUT':\n\n            return {\n                ...state,\n                requesting: true,\n                loaded: false\n            }\n        \n        case 'GET_ABOUT':\n\n            return {\n                ...state,\n                about: action.payload,\n                requesting: false,\n                loaded: true\n            }\n\n        case 'UPDATE_ABOUT_TEXT':\n\n            return {\n                ...state,\n                about: action.payload.about\n            }\n\n        default:\n            return state\n\n    }\n}\n","export function blogsReducer(state = { blogs: [], requesting: false, loaded: false}, action) {\n\n    let blogs;\n    let blog;\n    switch(action.type) {\n\n        case 'REQUESTING_BLOGS':\n            return {\n                ...state,\n                blogs: [],\n                requesting: true,\n                loaded: false\n            }\n\n        case 'GET_BLOGS':\n            return {\n                ...state,\n                blogs: action.payload,\n                requesting: false,\n                loaded: true\n            }\n        \n        case 'NEW_BLOG':\n\n            blogs = {...state.blogs}\n\n            blogs[action.payload.blogId] = {content: action.payload.content, updatedAt: action.payload.updatedAt}\n\n            return {\n                ...state,\n                blogs: blogs\n            }\n\n        case 'UPDATE_BLOG':\n            blogs = {...state.blogs}\n\n            blog = blogs[action.payload.blogId]\n\n            blog.content = action.payload.content\n\n            blog.updatedAt = action.payload.updatedAt\n\n            delete blogs[action.payload.blogId]\n            \n            blogs[action.payload.blogId] = blog\n\n            //debugger\n            return {\n                ...state,\n                blogs: blogs\n            }\n\n        default:\n            return state\n    }\n}","export function blogReducer(state = { blog: [], requesting: false, loaded: false}, action) {\n\n    switch(action.type) {\n\n        case 'REQUESTING_BLOG':\n            return {\n                ...state,\n                blogs: [],\n                requesting: true,\n                loaded: false\n            }\n\n        case 'GET_BLOG':\n            return {\n                ...state,\n                blog: action.payload,\n                requesting: false,\n                loaded: true\n            }\n\n        default:\n            return state\n    }\n}","export function userReducer(state = { user: [], requesting: false, loaded: false}, action) {\n\n    switch(action.type) {\n\n        case \"START_REQUESTING_USER\":\n            return {\n                user: [],\n                requesting: true,\n                loaded: false\n            }\n\n        case \"SET_USER\":\n            return {\n                user: action.payload.uid,\n                requesting: false,\n                loaded: true\n            }\n\n        \n\n        default:\n            return state\n    }\n\n}","export function cartReducer(state = { cart: [], jwtCart: [], requesting: false, loaded: false}, action) {\n\n    let item;\n    let cart;\n\n    switch(action.type) {\n\n        case \"START_REQUESTING_CART\":\n            return {\n                cart: [],\n                jwtCart: [],\n                requesting: true,\n                loaded: false\n            }\n\n        case 'ADD_ITEM_TO_CART':\n\n            cart = [...state.cart]\n\n            item = action.payload\n\n            cart.push(item)\n\n            return {\n                ...state,\n                cart: cart,\n                requesting: false,\n                loaded: true\n            }\n        \n        case \"GET_CART\":\n            return {\n                ...state,\n                cart: action.payload.lineItems,\n                requesting: false,\n                loaded: true\n            }\n\n        case 'GET_JWT_CART':\n            // debugger\n            return {\n                ...state,\n                jwtCart: action.payload,\n                requesting: false,\n                loaded: true\n            }\n\n        case 'UPDATE_CART':\n            \n\n            return {\n                ...state,\n                jwtCart: action.payload.data,\n                requesting: false,\n                loaded: true\n            }\n        default:\n            return state\n    }\n\n}","import { combineReducers } from \"redux\";\nimport { connectRouter } from 'connected-react-router'\nimport { artsReducer } from \"./artsReducer\";\nimport { artReducer } from \"./artReducer\";\nimport { aboutReducer } from \"./aboutReducer\";\nimport { blogsReducer } from './blogsReducer'\nimport { blogReducer } from \"./blogReducer\";\nimport { userReducer } from \"./userReducer\";\nimport { cartReducer } from \"./cartReducer\";\n\nexport const rootReducer = (history) => combineReducers({\n    router: connectRouter(history),\n    arts: artsReducer,\n    art: artReducer,\n    about: aboutReducer,\n    blogs: blogsReducer,\n    blog: blogReducer,\n    user: userReducer,\n    cart: cartReducer\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './custom.scss'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { rootReducer } from './reducers/reducers'\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createBrowserHistory } from 'history'\nimport { routerMiddleware } from 'connected-react-router'\nimport { ConnectedRouter } from 'connected-react-router'\n\nexport const history = createBrowserHistory()\n\n// const store = createStore(rootReducer(history), compose(applyMiddleware(thunk, routerMiddleware(history)), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()))\nconst store = createStore(rootReducer(history), compose(applyMiddleware(thunk, routerMiddleware(history))))\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <App />\n      </ConnectedRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}